{"ast":null,"code":"import axios from 'axios';\nimport cors from './cors';\nlet nyt = 'https://api.nytimes.com/svc/topstories/v2/us.json?api-key=vYeKrdCjpgK0YMYXG1yl1VDZ9fhPO7Yu';\nlet gaurdian = 'https://content.guardianapis.com/search?show-fields=thumbnail&q=coronavirus&page-size=100&api-key=3cb25f91-26b8-4f58-833f-873b0478f441';\nexport const newsHttp = async () => {\n  let nytReq = await axios.get(nyt);\n  let gaurdianReq = await axios.get(gaurdian);\n  cors();\n  axios.all([nytReq, gaurdianReq]).then(axios.spread((...responses) => {\n    const nytRes = responses[0];\n    const gaurdianRes = responses[1]; //\n    //console.log([nytRes, gaurdianRes]);\n\n    return [nytRes, gaurdianRes];\n  })).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/utilities/http.js"],"names":["axios","cors","nyt","gaurdian","newsHttp","nytReq","get","gaurdianReq","all","then","spread","responses","nytRes","gaurdianRes","catch","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAIC,GAAG,GACN,4FADD;AAEA,IAAIC,QAAQ,GACX,wIADD;AAGA,OAAO,MAAMC,QAAQ,GAAG,YAAY;AACnC,MAAIC,MAAM,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUJ,GAAV,CAAnB;AACA,MAAIK,WAAW,GAAG,MAAMP,KAAK,CAACM,GAAN,CAAUH,QAAV,CAAxB;AAEAF,EAAAA,IAAI;AAEJD,EAAAA,KAAK,CACHQ,GADF,CACM,CAACH,MAAD,EAASE,WAAT,CADN,EAEEE,IAFF,CAGET,KAAK,CAACU,MAAN,CAAa,CAAC,GAAGC,SAAJ,KAAkB;AAC9B,UAAMC,MAAM,GAAGD,SAAS,CAAC,CAAD,CAAxB;AACA,UAAME,WAAW,GAAGF,SAAS,CAAC,CAAD,CAA7B,CAF8B,CAI9B;AACA;;AACA,WAAO,CAACC,MAAD,EAASC,WAAT,CAAP;AACA,GAPD,CAHF,EAYEC,KAZF,CAYQC,GAAG,IAAI;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,GAdF;AAeA,CArBM","sourcesContent":["import axios from 'axios';\r\nimport cors from './cors';\r\n\r\nlet nyt =\r\n\t'https://api.nytimes.com/svc/topstories/v2/us.json?api-key=vYeKrdCjpgK0YMYXG1yl1VDZ9fhPO7Yu';\r\nlet gaurdian =\r\n\t'https://content.guardianapis.com/search?show-fields=thumbnail&q=coronavirus&page-size=100&api-key=3cb25f91-26b8-4f58-833f-873b0478f441';\r\n\r\nexport const newsHttp = async () => {\r\n\tlet nytReq = await axios.get(nyt);\r\n\tlet gaurdianReq = await axios.get(gaurdian);\r\n\r\n\tcors();\r\n\r\n\taxios\r\n\t\t.all([nytReq, gaurdianReq])\r\n\t\t.then(\r\n\t\t\taxios.spread((...responses) => {\r\n\t\t\t\tconst nytRes = responses[0];\r\n\t\t\t\tconst gaurdianRes = responses[1];\r\n\r\n\t\t\t\t//\r\n\t\t\t\t//console.log([nytRes, gaurdianRes]);\r\n\t\t\t\treturn [nytRes, gaurdianRes];\r\n\t\t\t})\r\n\t\t)\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n};\r\n"]},"metadata":{},"sourceType":"module"}