{"ast":null,"code":"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = (props, nycState, gaurdianData) => {\n  const nyc = props.nycState;\n  const gaurdian = props.gaurdianData; // const filteredNyc = [];\n  // const filteredGaurdian = [];\n  // const initialState = {\n  // \tfilteredNyc: []\n  // };\n  //\tconst [filteredNews, setNews] = usestate(initialState);\n  //const mapFilter = nyc ?\n  // const filterMap = nyc\n  // \t? nyc.map(item => {\n  // \t\t\tconsole.log(item);\n  // \t  })\n  // \t: '';\n\n  for (const item in nyc) {\n    //console.log(nyc[item]);\n    const results = nyc[item] == 'data' ? nyc[item].results : null;\n    console.log(results);\n  }\n\n  const filter = nyc ? Object.entries(nyc).filter(item => item !== undefined && item !== '') : '';\n  return 'data';\n};\n\nDataCard.propTypes = {\n  nycState: PropTypes.object.isRequired,\n  gaurdianData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  nycState: state.nyc.nycState,\n  gaurdianData: state.gaurdian.gaurdianData\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","connect","PropTypes","DataCard","props","nycState","gaurdianData","nyc","gaurdian","item","results","console","log","filter","Object","entries","undefined","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,YAAlB,KAAmC;AACnD,QAAMC,GAAG,GAAGH,KAAK,CAACC,QAAlB;AACA,QAAMG,QAAQ,GAAGJ,KAAK,CAACE,YAAvB,CAFmD,CAGnD;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAK,MAAMG,IAAX,IAAmBF,GAAnB,EAAwB;AACvB;AACA,UAAMG,OAAO,GAAGH,GAAG,CAACE,IAAD,CAAH,IAAa,MAAb,GAAsBF,GAAG,CAACE,IAAD,CAAH,CAAUC,OAAhC,GAA0C,IAA1D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA;;AAED,QAAMG,MAAM,GAAGN,GAAG,GACfO,MAAM,CAACC,OAAP,CAAeR,GAAf,EAAoBM,MAApB,CAA2BJ,IAAI,IAAIA,IAAI,KAAKO,SAAT,IAAsBP,IAAI,KAAK,EAAlE,CADe,GAEf,EAFH;AAIA,SAAO,MAAP;AACA,CA/BD;;AAiCAN,QAAQ,CAACc,SAAT,GAAqB;AACpBZ,EAAAA,QAAQ,EAAEH,SAAS,CAACgB,MAAV,CAAiBC,UADP;AAEpBb,EAAAA,YAAY,EAAEJ,SAAS,CAACgB,MAAV,CAAiBC;AAFX,CAArB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjChB,EAAAA,QAAQ,EAAEgB,KAAK,CAACd,GAAN,CAAUF,QADa;AAEjCC,EAAAA,YAAY,EAAEe,KAAK,CAACb,QAAN,CAAeF;AAFI,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACmB,eAAD,CAAP,CAAyBjB,QAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = (props, nycState, gaurdianData) => {\r\n\tconst nyc = props.nycState;\r\n\tconst gaurdian = props.gaurdianData;\r\n\t// const filteredNyc = [];\r\n\t// const filteredGaurdian = [];\r\n\r\n\t// const initialState = {\r\n\t// \tfilteredNyc: []\r\n\t// };\r\n\r\n\t//\tconst [filteredNews, setNews] = usestate(initialState);\r\n\r\n\t//const mapFilter = nyc ?\r\n\r\n\t// const filterMap = nyc\r\n\t// \t? nyc.map(item => {\r\n\t// \t\t\tconsole.log(item);\r\n\t// \t  })\r\n\t// \t: '';\r\n\r\n\tfor (const item in nyc) {\r\n\t\t//console.log(nyc[item]);\r\n\t\tconst results = nyc[item] == 'data' ? nyc[item].results : null;\r\n\t\tconsole.log(results);\r\n\t}\r\n\r\n\tconst filter = nyc\r\n\t\t? Object.entries(nyc).filter(item => item !== undefined && item !== '')\r\n\t\t: '';\r\n\r\n\treturn 'data';\r\n};\r\n\r\nDataCard.propTypes = {\r\n\tnycState: PropTypes.object.isRequired,\r\n\tgaurdianData: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tnycState: state.nyc.nycState,\r\n\tgaurdianData: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}