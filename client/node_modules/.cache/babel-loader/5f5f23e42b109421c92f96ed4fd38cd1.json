{"ast":null,"code":"import { SEARCH_SUCCESS, SEARCH_FAILURE } from './types';\nimport axios from 'axios';\nexport const searchNews = searchTerm => async dispatch => {\n  console.log('search action');\n\n  try {\n    const callSearchNews = await axios.get('/search-news', {\n      params: {\n        q: searchTerm\n      }\n    }); // formatted results\n\n    dispatch({\n      type: SEARCH_SUCCESS,\n      payload: callSearchNews\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: SEARCH_FAILURE,\n      payload: {\n        msg: err,\n        status: err\n      }\n    });\n  }\n};\nexport default searchNews;","map":{"version":3,"sources":["C:/Users/Daniel Brusky/OneDrive/Desktop/papers/client/src/actions/searchNews.js"],"names":["SEARCH_SUCCESS","SEARCH_FAILURE","axios","searchNews","searchTerm","dispatch","console","log","callSearchNews","get","params","q","type","payload","err","msg","status"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,cAAzB,QAA+C,SAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAIC,UAAD,IAAgB,MAAOC,QAAP,IAAoB;AAC7DC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,MAAI;AAEH,UAAMC,cAAc,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,cAAV,EAA0B;AACtDC,MAAAA,MAAM,EAAE;AACPC,QAAAA,CAAC,EAAEP;AADI;AAD8C,KAA1B,CAA7B,CAFG,CAQH;;AAEAC,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEZ,cADE;AAERa,MAAAA,OAAO,EAAEL;AAFD,KAAD,CAAR;AAIA,GAdD,CAcE,OAAOM,GAAP,EAAY;AACbR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACAT,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEX,cADE;AAERY,MAAAA,OAAO,EAAE;AACRE,QAAAA,GAAG,EAAED,GADG;AAERE,QAAAA,MAAM,EAAEF;AAFA;AAFD,KAAD,CAAR;AAOA;AACD,CA1BM;AA4BP,eAAeX,UAAf","sourcesContent":["import { SEARCH_SUCCESS, SEARCH_FAILURE } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const searchNews = (searchTerm) => async (dispatch) => {\r\n\tconsole.log('search action');\r\n\ttry {\r\n\t\t\r\n\t\tconst callSearchNews = await axios.get('/search-news', {\r\n\t\t\tparams: {\r\n\t\t\t\tq: searchTerm,\r\n\t\t\t},\r\n\t\t});\r\n\t\t\r\n\t\t// formatted results\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: SEARCH_SUCCESS,\r\n\t\t\tpayload: callSearchNews,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tconsole.log(err)\r\n\t\tdispatch({\r\n\t\t\ttype: SEARCH_FAILURE,\r\n\t\t\tpayload: {\r\n\t\t\t\tmsg: err,\r\n\t\t\t\tstatus: err,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default searchNews\r\n"]},"metadata":{},"sourceType":"module"}