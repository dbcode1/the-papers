{"ast":null,"code":"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = (props, nycState, gaurdianData) => {\n  const nyc = props.nycState;\n  const gaurdian = props.gaurdianData; // const filteredNyc = [];\n  // const filteredGaurdian = [];\n  // const initialState = {\n  // \tfilteredNyc: []\n  // };\n  //\tconst [filteredNews, setNews] = usestate(initialState);\n\n  const filter = nyc ? nyc.filter(item => item !== null) : '';\n  console.log(typeof nyc);\n  console.log(filter);\n  console.log(typeof filter);\n  return 'data';\n};\n\nDataCard.propTypes = {\n  nycState: PropTypes.object.isRequired,\n  gaurdianData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  nycState: state.nyc.nycState,\n  gaurdianData: state.gaurdian.gaurdianData\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","connect","PropTypes","DataCard","props","nycState","gaurdianData","nyc","gaurdian","filter","item","console","log","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,YAAlB,KAAmC;AACnD,QAAMC,GAAG,GAAGH,KAAK,CAACC,QAAlB;AACA,QAAMG,QAAQ,GAAGJ,KAAK,CAACE,YAAvB,CAFmD,CAGnD;AACA;AAEA;AACA;AACA;AAEA;;AAEA,QAAMG,MAAM,GAAGF,GAAG,GAAGA,GAAG,CAACE,MAAJ,CAAWC,IAAI,IAAIA,IAAI,KAAK,IAA5B,CAAH,GAAuC,EAAzD;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOL,GAAnB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,MAAnB;AACA,SAAO,MAAP;AACA,CAlBD;;AAoBAN,QAAQ,CAACU,SAAT,GAAqB;AACpBR,EAAAA,QAAQ,EAAEH,SAAS,CAACY,MAAV,CAAiBC,UADP;AAEpBT,EAAAA,YAAY,EAAEJ,SAAS,CAACY,MAAV,CAAiBC;AAFX,CAArB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCZ,EAAAA,QAAQ,EAAEY,KAAK,CAACV,GAAN,CAAUF,QADa;AAEjCC,EAAAA,YAAY,EAAEW,KAAK,CAACT,QAAN,CAAeF;AAFI,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACe,eAAD,CAAP,CAAyBb,QAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = (props, nycState, gaurdianData) => {\r\n\tconst nyc = props.nycState;\r\n\tconst gaurdian = props.gaurdianData;\r\n\t// const filteredNyc = [];\r\n\t// const filteredGaurdian = [];\r\n\r\n\t// const initialState = {\r\n\t// \tfilteredNyc: []\r\n\t// };\r\n\r\n\t//\tconst [filteredNews, setNews] = usestate(initialState);\r\n\r\n\tconst filter = nyc ? nyc.filter(item => item !== null) : '';\r\n\r\n\tconsole.log(typeof nyc);\r\n\tconsole.log(filter);\r\n\tconsole.log(typeof filter);\r\n\treturn 'data';\r\n};\r\n\r\nDataCard.propTypes = {\r\n\tnycState: PropTypes.object.isRequired,\r\n\tgaurdianData: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tnycState: state.nyc.nycState,\r\n\tgaurdianData: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}