{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { register } from '../../actions/auth';\nimport styled from 'styled-components';\nimport DataForm from '../../styled/DataForm';\nimport DataField from '../../styled/DataField';\nimport SendForm from '../../styled/SendForm';\nconst Title = styled.h3`\n\tletter-spacing: 1.25px;\n\tmargin-bottom: 0.75em;\n`;\nconst StyledSubmit = styled(SendForm)`\n\tdisplay: inline-block;\n\tmargin: 1.25em 0 0.75em 0;\n`;\n\nconst Register = ({\n  register\n}) => {\n  const [formData, setFormData] = useState({\n    fullname: '',\n    email: '',\n    password: ''\n  });\n  const {\n    fullname,\n    email,\n    password\n  } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    register(fullname, email, password);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DataForm, {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(DataField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fullname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, \"fullname\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: fullname,\n    name: \"fullname\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(DataField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  }, \"email \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(DataField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, \"password \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(SendForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, \"Submit\")));\n};\n\nconst mapStateToProps = state => ({//isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, {\n  register\n})(Register);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","register","styled","DataForm","DataField","SendForm","Title","h3","StyledSubmit","Register","formData","setFormData","fullname","email","password","onChange","e","target","name","value","onSubmit","preventDefault","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { register } from '../../actions/auth';\r\n\r\nimport styled from 'styled-components';\r\nimport DataForm from '../../styled/DataForm';\r\nimport DataField from '../../styled/DataField';\r\nimport SendForm from '../../styled/SendForm';\r\n\r\nconst Title = styled.h3`\r\n\tletter-spacing: 1.25px;\r\n\tmargin-bottom: 0.75em;\r\n`;\r\n\r\nconst StyledSubmit = styled(SendForm)`\r\n\tdisplay: inline-block;\r\n\tmargin: 1.25em 0 0.75em 0;\r\n`;\r\n\r\nconst Register = ({ register }) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tfullname: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t});\r\n\r\n\tconst { fullname, email, password } = formData;\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\t};\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tregister(fullname, email, password);\r\n\t};\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<DataForm onSubmit={(e) => onSubmit(e)}>\r\n\t\t\t\t<Title>Register</Title>\r\n\t\t\t\t<DataField>\r\n\t\t\t\t\t<label htmlFor='fullname'>fullname</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={fullname}\r\n\t\t\t\t\t\tname='fullname'\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DataField>\r\n\t\t\t\t<DataField>\r\n\t\t\t\t\t<label htmlFor='email'>email </label>\r\n\t\t\t\t\t<input type='email' name='email' onChange={(e) => onChange(e)} />\r\n\t\t\t\t</DataField>\r\n\t\t\t\t<DataField>\r\n\t\t\t\t\t<label htmlFor='Password'>password </label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DataField>\r\n\r\n\t\t\t\t<SendForm>Submit</SendForm>\r\n\t\t\t</DataForm>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\t//isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { register })(Register);\r\n"]},"metadata":{},"sourceType":"module"}