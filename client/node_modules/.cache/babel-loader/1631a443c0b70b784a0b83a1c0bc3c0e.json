{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataView.js\";\nimport React, { useEffect, useState, Fragment } from 'react'; //import { Link, withRouter } from 'react-router-dom';\n\nimport { topStories } from '../actions/topStories';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DataCard from './DataCard';\nimport DashBoard from './DashBoard';\n\nconst DataView = topStories => {\n  useEffect(() => {\n    topStories();\n  }, [topStories]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DashBoard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(DataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }));\n};\n\nDataView.propTypes = {\n  topStories: PropTypes.func.isRequired,\n  currentResults: PropTypes.array.isRequired,\n  gaurdian: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  currentResults: state.currentResults\n});\n\nexport default connect(mapStateToProps, {\n  topStories\n})(DataView);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataView.js"],"names":["React","useEffect","useState","Fragment","topStories","connect","PropTypes","DataCard","DashBoard","DataView","propTypes","func","isRequired","currentResults","array","gaurdian","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD,C,CACA;;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,QAAQ,GAAIL,UAAD,IAAgB;AAChCH,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,UAAU;AACV,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIA,sBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAMA,CAXD;;AAaAK,QAAQ,CAACC,SAAT,GAAqB;AACpBN,EAAAA,UAAU,EAAEE,SAAS,CAACK,IAAV,CAAeC,UADP;AAEpBC,EAAAA,cAAc,EAAEP,SAAS,CAACQ,KAAV,CAAgBF,UAFZ;AAGpBG,EAAAA,QAAQ,EAAET,SAAS,CAACQ,KAAV,CAAgBF;AAHN,CAArB;;AAMA,MAAMI,eAAe,GAAIC,KAAD,KAAY;AACnCJ,EAAAA,cAAc,EAAEI,KAAK,CAACJ;AADa,CAAZ,CAAxB;;AAIA,eAAeR,OAAO,CAACW,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAAyCK,QAAzC,CAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\r\n//import { Link, withRouter } from 'react-router-dom';\r\nimport { topStories } from '../actions/topStories';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport DataCard from './DataCard';\r\nimport DashBoard from './DashBoard';\r\n\r\nconst DataView = (topStories) => {\r\n\tuseEffect(() => {\r\n\t\ttopStories();\r\n\t}, [topStories]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<DashBoard></DashBoard>\r\n\t\t\t<DataCard />\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nDataView.propTypes = {\r\n\ttopStories: PropTypes.func.isRequired,\r\n\tcurrentResults: PropTypes.array.isRequired,\r\n\tgaurdian: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcurrentResults: state.currentResults,\r\n});\r\n\r\nexport default connect(mapStateToProps, { topStories })(DataView);\r\n"]},"metadata":{},"sourceType":"module"}