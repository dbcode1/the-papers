{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst newsItems = (state, gaurdian) => {\n  // if (state.nyc) {\n  // \treturn;\n  // }\n  const news = () => {\n    console.log(state);\n  };\n\n  for (const item in state.nyc) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 10\n      }\n    }, state.nyc[item].title);\n  } // const news = state.nyc((item, index) => {\n  // \treturn (\n  // \t\t<div key={index}>\n  // \t\t\t<p>{item.abstract} </p>\n  // \t\t</div>\n  // \t);\n  // });\n  // return <div>{news}</div>;\n  //const news = props.results.map((item, index) => {\n  // \treturn (\n  // \t\t<div key={index}>\n  // \t\t\t<p>{item.abstract} </p>\n  // \t\t</div>\n  // \t);\n  // });\n  // return <div>{news}</div>;\n  //console.log(typeof state.nyc);\n\n}; // newsItems.propTypes = {\n// \tnyc: PropTypes.array.isRequired,\n// \tgaurdian: PropTypes.object.isRequired\n// };\n\n\nconst mapStateToProps = state => ({\n  nyc: state.nyc,\n  gaurdian: state.gaurdian.gaurdianData\n});\n\nexport default connect(mapStateToProps)(newsItems);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","useEffect","connect","PropTypes","newsItems","state","gaurdian","news","console","log","item","nyc","title","mapStateToProps","gaurdianData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtC;AACA;AACA;AACA,QAAMC,IAAI,GAAG,MAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,GAFD;;AAGA,OAAK,MAAMK,IAAX,IAAmBL,KAAK,CAACM,GAAzB,EAA8B;AAC7B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIN,KAAK,CAACM,GAAN,CAAUD,IAAV,EAAgBE,KAApB,CAAP;AACA,GATqC,CAWtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,CA5BD,C,CA8BA;AACA;AACA;AACA;;;AAEA,MAAMC,eAAe,GAAGR,KAAK,KAAK;AACjCM,EAAAA,GAAG,EAAEN,KAAK,CAACM,GADsB;AAEjCL,EAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeQ;AAFQ,CAAL,CAA7B;;AAKA,eAAeZ,OAAO,CAACW,eAAD,CAAP,CAAyBT,SAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst newsItems = (state, gaurdian) => {\r\n\t// if (state.nyc) {\r\n\t// \treturn;\r\n\t// }\r\n\tconst news = () => {\r\n\t\tconsole.log(state);\r\n\t};\r\n\tfor (const item in state.nyc) {\r\n\t\treturn <p>{state.nyc[item].title}</p>;\r\n\t}\r\n\r\n\t// const news = state.nyc((item, index) => {\r\n\t// \treturn (\r\n\t// \t\t<div key={index}>\r\n\t// \t\t\t<p>{item.abstract} </p>\r\n\t// \t\t</div>\r\n\t// \t);\r\n\t// });\r\n\t// return <div>{news}</div>;\r\n\t//const news = props.results.map((item, index) => {\r\n\t// \treturn (\r\n\t// \t\t<div key={index}>\r\n\t// \t\t\t<p>{item.abstract} </p>\r\n\t// \t\t</div>\r\n\t// \t);\r\n\t// });\r\n\t// return <div>{news}</div>;\r\n\t//console.log(typeof state.nyc);\r\n};\r\n\r\n// newsItems.propTypes = {\r\n// \tnyc: PropTypes.array.isRequired,\r\n// \tgaurdian: PropTypes.object.isRequired\r\n// };\r\n\r\nconst mapStateToProps = state => ({\r\n\tnyc: state.nyc,\r\n\tgaurdian: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(newsItems);\r\n"]},"metadata":{},"sourceType":"module"}