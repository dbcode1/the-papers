{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst newsItems = (nyc, gaurdian, props) => {\n  // const news = state.nyc((item, index) => {\n  // \treturn (\n  // \t\t<div key={index}>\n  // \t\t\t<p>{item.abstract} </p>\n  // \t\t</div>\n  // \t);\n  // });\n  // return <div>{news}</div>;\n  if (props.results) {\n    console.log(props);\n  } // // const news = props.results.map((item, index) => {\n  // \t\treturn (\n  // \t\t\t<div key={index}>\n  // \t\t\t\t<p>{item.abstract} </p>\n  // \t\t\t</div>\n  // \t\t);\n  // \t});\n  // \treturn <div>{news}</div>;\n\n\n  return 'card';\n};\n\nnewsItems.propTypes = {\n  nyc: PropTypes.array.isRequired,\n  gaurdian: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  nyc: state.nyc.nyc,\n  gaurdian: state.gaurdian.gaurdianData\n});\n\nexport default connect(mapStateToProps)(newsItems);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","useEffect","connect","PropTypes","newsItems","nyc","gaurdian","props","results","console","log","propTypes","array","isRequired","object","mapStateToProps","state","gaurdianData"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,QAAN,EAAgBC,KAAhB,KAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAIA,KAAK,CAACC,OAAV,EAAmB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,GAX0C,CAY3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAO,MAAP;AACA,CAtBD;;AAwBAH,SAAS,CAACO,SAAV,GAAsB;AACrBN,EAAAA,GAAG,EAAEF,SAAS,CAACS,KAAV,CAAgBC,UADA;AAErBP,EAAAA,QAAQ,EAAEH,SAAS,CAACW,MAAV,CAAiBD;AAFN,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCX,EAAAA,GAAG,EAAEW,KAAK,CAACX,GAAN,CAAUA,GADkB;AAEjCC,EAAAA,QAAQ,EAAEU,KAAK,CAACV,QAAN,CAAeW;AAFQ,CAAL,CAA7B;;AAKA,eAAef,OAAO,CAACa,eAAD,CAAP,CAAyBX,SAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst newsItems = (nyc, gaurdian, props) => {\r\n\t// const news = state.nyc((item, index) => {\r\n\t// \treturn (\r\n\t// \t\t<div key={index}>\r\n\t// \t\t\t<p>{item.abstract} </p>\r\n\t// \t\t</div>\r\n\t// \t);\r\n\t// });\r\n\t// return <div>{news}</div>;\r\n\tif (props.results) {\r\n\t\tconsole.log(props);\r\n\t}\r\n\t// // const news = props.results.map((item, index) => {\r\n\t// \t\treturn (\r\n\t// \t\t\t<div key={index}>\r\n\t// \t\t\t\t<p>{item.abstract} </p>\r\n\t// \t\t\t</div>\r\n\t// \t\t);\r\n\t// \t});\r\n\t// \treturn <div>{news}</div>;\r\n\r\n\treturn 'card';\r\n};\r\n\r\nnewsItems.propTypes = {\r\n\tnyc: PropTypes.array.isRequired,\r\n\tgaurdian: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tnyc: state.nyc.nyc,\r\n\tgaurdian: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(newsItems);\r\n"]},"metadata":{},"sourceType":"module"}