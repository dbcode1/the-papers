{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = ({\n  nycData,\n  gaurdianData\n}) => {\n  console.log(state); // const dataArr = Object.entries(data);\n  // console.log(ata);\n  // const nyc = dataArr[0][1][0];\n  // const gaurdian = dataArr[0][1][1];\n  // let gaurdianFiltered = [];\n  // if (gaurdian !== undefined) {\n  // \tgaurdianFiltered = gaurdian.filter(item => item !== undefined);\n  // }\n  // const nycArr = [];\n  // const gaurdianArr = [];\n  // gaurdianFiltered.map(item => {\n  // \tgaurdianArr.push(item);\n  // });\n  // if (typeof nyc !== 'undefined') {\n  // \tdata.data[0].map(item => {\n  // \t\tnycArr.push(item);\n  // \t});\n  // }\n  // return (\n  // \t<ol>\n  // \t\t{nycArr.map}(item => (\n  // \t\t\t<li key={item.url}>{item.url.key}</li>\n  // \t\t))}\n  // \t\t{gaurdianArr.map(item => (\n  // \t\t\t<li>{item.webTitle}</li>\n  // \t\t))}\n  // \t</ol>\n  // );\n\n  return 'data';\n}; // DataCard.propTypes = {\n// \tnycData: PropTypes.object.isRequired,\n// \tgaurdianData: PropTypes.object.isRequired\n// };\n\n\nconst mapStateToProps = state => ({\n  nycData: state.nycData,\n  gaurdianData: state.gaurdianData\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","connect","PropTypes","DataCard","nycData","gaurdianData","console","log","state","mapStateToProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA+B;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EAD+C,CAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO,MAAP;AACA,CAhCD,C,CAkCA;AACA;AACA;AACA;;;AACA,MAAMC,eAAe,GAAGD,KAAK,KAAK;AACjCJ,EAAAA,OAAO,EAAEI,KAAK,CAACJ,OADkB;AAEjCC,EAAAA,YAAY,EAAEG,KAAK,CAACH;AAFa,CAAL,CAA7B;;AAKA,eAAeJ,OAAO,CAACQ,eAAD,CAAP,CAAyBN,QAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = ({ nycData, gaurdianData }) => {\r\n\tconsole.log(state);\r\n\t// const dataArr = Object.entries(data);\r\n\t// console.log(ata);\r\n\t// const nyc = dataArr[0][1][0];\r\n\t// const gaurdian = dataArr[0][1][1];\r\n\t// let gaurdianFiltered = [];\r\n\t// if (gaurdian !== undefined) {\r\n\t// \tgaurdianFiltered = gaurdian.filter(item => item !== undefined);\r\n\t// }\r\n\t// const nycArr = [];\r\n\t// const gaurdianArr = [];\r\n\t// gaurdianFiltered.map(item => {\r\n\t// \tgaurdianArr.push(item);\r\n\t// });\r\n\t// if (typeof nyc !== 'undefined') {\r\n\t// \tdata.data[0].map(item => {\r\n\t// \t\tnycArr.push(item);\r\n\t// \t});\r\n\t// }\r\n\t// return (\r\n\t// \t<ol>\r\n\t// \t\t{nycArr.map}(item => (\r\n\t// \t\t\t<li key={item.url}>{item.url.key}</li>\r\n\t// \t\t))}\r\n\t// \t\t{gaurdianArr.map(item => (\r\n\t// \t\t\t<li>{item.webTitle}</li>\r\n\t// \t\t))}\r\n\t// \t</ol>\r\n\t// );\r\n\r\n\treturn 'data';\r\n};\r\n\r\n// DataCard.propTypes = {\r\n// \tnycData: PropTypes.object.isRequired,\r\n// \tgaurdianData: PropTypes.object.isRequired\r\n// };\r\nconst mapStateToProps = state => ({\r\n\tnycData: state.nycData,\r\n\tgaurdianData: state.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}