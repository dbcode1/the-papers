{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\OneDrive\\\\Desktop\\\\papers\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { register } from '../../actions/auth';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { setAlert } from '../../actions/alert';\nimport DataForm from '../../styled/DataForm';\nimport DataField from '../../styled/DataField';\nimport Button from '../../styled/Button';\nconst Title = styled.h3`\n\tletter-spacing: 1.25px;\n\tmargin-bottom: 0.75em;\n`;\nconst Wrapper = styled.div`\n\th4{\n\t\tposition: fixed;\n\t\tbottom: 20px;\n\t\tright: 20px;\n\t\tcursor: pointer;\n\t}\n`;\nconst StyledSubmit = styled(Button)`\n\theight: 4em;\n\twidth: 15em;\n\tfont-size: 1em;\n\tmargin: 2em auto 1em auto;\n\tletter-spacing: 2.5px;\n`;\n\nconst Register = ({\n  register,\n  isAuthenticated\n}) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  let history = useHistory();\n\n  function back() {\n    history.push('/login');\n  }\n\n  const {\n    name,\n    email,\n    password\n  } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // TODO: add password one password two verify\n\n    register({\n      name,\n      email,\n      password\n    });\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DataForm, {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(DataField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  }, \"full name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    name: \"name\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(DataField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }, \"email \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    name: \"email\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(DataField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }\n  }, \"password \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    name: \"password\",\n    minLength: \"6\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(StyledSubmit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"h4\", {\n    onClick: back,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }\n  }, \"Login\"));\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/OneDrive/Desktop/papers/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","register","Redirect","useHistory","styled","setAlert","DataForm","DataField","Button","Title","h3","Wrapper","div","StyledSubmit","Register","isAuthenticated","formData","setFormData","name","email","password","history","back","push","onChange","e","target","value","onSubmit","preventDefault","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { register } from '../../actions/auth';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nimport styled from 'styled-components';\r\nimport { setAlert } from '../../actions/alert';\r\nimport DataForm from '../../styled/DataForm';\r\nimport DataField from '../../styled/DataField';\r\nimport Button from '../../styled/Button';\r\n\r\nconst Title = styled.h3`\r\n\tletter-spacing: 1.25px;\r\n\tmargin-bottom: 0.75em;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n\th4{\r\n\t\tposition: fixed;\r\n\t\tbottom: 20px;\r\n\t\tright: 20px;\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\nconst StyledSubmit = styled(Button)`\r\n\theight: 4em;\r\n\twidth: 15em;\r\n\tfont-size: 1em;\r\n\tmargin: 2em auto 1em auto;\r\n\tletter-spacing: 2.5px;\r\n`;\r\n\r\nconst Register = ({ register, isAuthenticated }) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t});\r\n\r\n\tlet history = useHistory()\r\n\r\n\tfunction back(){\r\n\t\thistory.push('/login')\r\n\t}\r\n\r\n\tconst { name, email, password } = formData;\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\t};\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\t// TODO: add password one password two verify\r\n\t\tregister({ name, email, password });\r\n\t};\r\n\r\n\tif (isAuthenticated) {\r\n\t\treturn <Redirect to='/search' />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<DataForm onSubmit={(e) => onSubmit(e)}>\r\n\t\t\t\t<Title>Register</Title>\r\n\t\t\t\t<DataField>\r\n\t\t\t\t\t<label htmlFor='name'>full name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DataField>\r\n\t\t\t\t<DataField>\r\n\t\t\t\t\t<label htmlFor='email'>email </label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DataField>\r\n\t\t\t\t<DataField>\r\n\t\t\t\t\t<label htmlFor='Password'>password </label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tminLength='6'\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DataField>\r\n\t\t\t\t<StyledSubmit>Submit</StyledSubmit>\r\n\t\t\t</DataForm>\r\n\t\t\t<h4 onClick={back}>Login</h4>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n"]},"metadata":{},"sourceType":"module"}