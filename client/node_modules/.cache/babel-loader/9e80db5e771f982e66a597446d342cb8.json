{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst newsItems = (nyc, gaurdian) => {\n  // if (state.nyc) {\n  // \treturn;\n  // }\n  const mapper = () => {\n    for (const item in nyc.nyc) {\n      console.log(nyc.nyc[item]);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 6\n        }\n      }, nyc.nyc[item].abstract, \" \"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, mapper); // const news = state.nyc((item, index) => {\n  // \treturn (\n  // \t\t<div key={index}>\n  // \t\t\t<p>{item.abstract} </p>\n  // \t\t</div>\n  // \t);\n  // });\n  // return <div>{news}</div>;\n  //const news = props.results.map((item, index) => {\n  // \treturn (\n  // \t\t<div key={index}>\n  // \t\t\t<p>{item.abstract} </p>\n  // \t\t</div>\n  // \t);\n  // });\n  // return <div>{news}</div>;\n\n  return 'card';\n};\n\nnewsItems.propTypes = {\n  nyc: PropTypes.array.isRequired,\n  gaurdian: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  nyc: state.nyc.nyc,\n  gaurdian: state.gaurdian.gaurdianData\n});\n\nexport default connect(mapStateToProps)(newsItems);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","useEffect","connect","PropTypes","newsItems","nyc","gaurdian","mapper","item","console","log","abstract","propTypes","array","isRequired","object","mapStateToProps","state","gaurdianData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACpC;AACA;AACA;AACA,QAAMC,MAAM,GAAG,MAAM;AACpB,SAAK,MAAMC,IAAX,IAAmBH,GAAG,CAACA,GAAvB,EAA4B;AAC3BI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACA,GAAJ,CAAQG,IAAR,CAAZ;AACA,0BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,GAAG,CAACA,GAAJ,CAAQG,IAAR,EAAcG,QAAlB,MADD,CADD;AAKA;AACD,GATD;;AAWA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,MAAN,CAAP,CAfoC,CAiBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO,MAAP;AACA,CApCD;;AAsCAH,SAAS,CAACQ,SAAV,GAAsB;AACrBP,EAAAA,GAAG,EAAEF,SAAS,CAACU,KAAV,CAAgBC,UADA;AAErBR,EAAAA,QAAQ,EAAEH,SAAS,CAACY,MAAV,CAAiBD;AAFN,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCZ,EAAAA,GAAG,EAAEY,KAAK,CAACZ,GAAN,CAAUA,GADkB;AAEjCC,EAAAA,QAAQ,EAAEW,KAAK,CAACX,QAAN,CAAeY;AAFQ,CAAL,CAA7B;;AAKA,eAAehB,OAAO,CAACc,eAAD,CAAP,CAAyBZ,SAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst newsItems = (nyc, gaurdian) => {\r\n\t// if (state.nyc) {\r\n\t// \treturn;\r\n\t// }\r\n\tconst mapper = () => {\r\n\t\tfor (const item in nyc.nyc) {\r\n\t\t\tconsole.log(nyc.nyc[item]);\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>{nyc.nyc[item].abstract} </p>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn <div>{mapper}</div>;\r\n\r\n\t// const news = state.nyc((item, index) => {\r\n\t// \treturn (\r\n\t// \t\t<div key={index}>\r\n\t// \t\t\t<p>{item.abstract} </p>\r\n\t// \t\t</div>\r\n\t// \t);\r\n\t// });\r\n\t// return <div>{news}</div>;\r\n\r\n\t//const news = props.results.map((item, index) => {\r\n\t// \treturn (\r\n\t// \t\t<div key={index}>\r\n\t// \t\t\t<p>{item.abstract} </p>\r\n\t// \t\t</div>\r\n\t// \t);\r\n\t// });\r\n\t// return <div>{news}</div>;\r\n\r\n\treturn 'card';\r\n};\r\n\r\nnewsItems.propTypes = {\r\n\tnyc: PropTypes.array.isRequired,\r\n\tgaurdian: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tnyc: state.nyc.nyc,\r\n\tgaurdian: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(newsItems);\r\n"]},"metadata":{},"sourceType":"module"}