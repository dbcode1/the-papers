{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataCard.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = (props, nycState, gaurdianData) => {\n  const nyc = props.nycState;\n  const gaurdian = props.gaurdianData;\n  const filteredNyc = [];\n  const filteredGaurdian = [];\n  const initialState = {\n    filteredNyc: []\n  }; //\tconst [filteredNews, setNews] = usestate(initialState);\n\n  if (nyc) {\n    const nycData = Object.entries(nyc.data.results);\n    nycData.forEach(([key, value]) => {\n      console.log(value);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  });\n};\n\nDataCard.propTypes = {\n  nycState: PropTypes.object.isRequired,\n  gaurdianData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  nycState: state.nyc.nycState,\n  gaurdianData: state.gaurdian.gaurdianData\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","connect","PropTypes","DataCard","props","nycState","gaurdianData","nyc","gaurdian","filteredNyc","filteredGaurdian","initialState","nycData","Object","entries","data","results","forEach","key","value","console","log","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,YAAlB,KAAmC;AACnD,QAAMC,GAAG,GAAGH,KAAK,CAACC,QAAlB;AACA,QAAMG,QAAQ,GAAGJ,KAAK,CAACE,YAAvB;AACA,QAAMG,WAAW,GAAG,EAApB;AACA,QAAMC,gBAAgB,GAAG,EAAzB;AAEA,QAAMC,YAAY,GAAG;AACpBF,IAAAA,WAAW,EAAE;AADO,GAArB,CANmD,CAUnD;;AAEA,MAAIF,GAAJ,EAAS;AACR,UAAMK,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAeP,GAAG,CAACQ,IAAJ,CAASC,OAAxB,CAAhB;AAEAJ,IAAAA,OAAO,CAACK,OAAR,CAAgB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,KAFD;AAGA;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,CArBD;;AAuBAhB,QAAQ,CAACmB,SAAT,GAAqB;AACpBjB,EAAAA,QAAQ,EAAEH,SAAS,CAACqB,MAAV,CAAiBC,UADP;AAEpBlB,EAAAA,YAAY,EAAEJ,SAAS,CAACqB,MAAV,CAAiBC;AAFX,CAArB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCrB,EAAAA,QAAQ,EAAEqB,KAAK,CAACnB,GAAN,CAAUF,QADa;AAEjCC,EAAAA,YAAY,EAAEoB,KAAK,CAAClB,QAAN,CAAeF;AAFI,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACwB,eAAD,CAAP,CAAyBtB,QAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = (props, nycState, gaurdianData) => {\r\n\tconst nyc = props.nycState;\r\n\tconst gaurdian = props.gaurdianData;\r\n\tconst filteredNyc = [];\r\n\tconst filteredGaurdian = [];\r\n\r\n\tconst initialState = {\r\n\t\tfilteredNyc: []\r\n\t};\r\n\r\n\t//\tconst [filteredNews, setNews] = usestate(initialState);\r\n\r\n\tif (nyc) {\r\n\t\tconst nycData = Object.entries(nyc.data.results);\r\n\r\n\t\tnycData.forEach(([key, value]) => {\r\n\t\t\tconsole.log(value);\r\n\t\t});\r\n\t}\r\n\r\n\treturn <ol></ol>;\r\n};\r\n\r\nDataCard.propTypes = {\r\n\tnycState: PropTypes.object.isRequired,\r\n\tgaurdianData: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tnycState: state.nyc.nycState,\r\n\tgaurdianData: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}