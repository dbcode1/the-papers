{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\OneDrive\\\\Desktop\\\\papers\\\\client\\\\src\\\\components\\\\layout\\\\Dashboard.js\";\nimport React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { searchNews } from '../../actions/searchNews';\nimport DataView from '../layout/DataView';\nimport styled from 'styled-components';\nimport Modal, { ModalProvider, BaseModalBackground } from \"styled-react-modal\";\nimport Nav from '../../styled/Nav';\nimport Button from '../../styled/Button';\nimport Content from '../../styled/Content';\nimport Header from '../../styled/Header';\nimport Global from '../../styled/Global';\n\nconst DashBoard = ({\n  searchNews,\n  isAuthenticated\n}) => {\n  // Modal //\n  const StyledModal = Modal.styled`\n\twidth: 20rem;\n\theight: 20rem;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: white;\n\topacity: ${props => props.opacity};\n\ttransition: opacity ease 500ms;\n\t`;\n\n  function FancyModalButton() {\n    const [isOpen, setIsOpen] = useState(false);\n    const [opacity, setOpacity] = useState(0);\n\n    function toggleModal(e) {\n      setIsOpen(!isOpen);\n    }\n\n    function afterOpen() {\n      setTimeout(() => {\n        setOpacity(1);\n      }, 10);\n    }\n\n    function beforeClose() {\n      return new Promise(resolve => {\n        setOpacity(0);\n        setTimeout(resolve, 200);\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }\n    }, \"Account\"), /*#__PURE__*/React.createElement(StyledModal, {\n      isOpen: isOpen,\n      afterOpen: afterOpen,\n      beforeClose: beforeClose,\n      onBackgroundClick: toggleModal,\n      onEscapeKeydown: toggleModal,\n      opacity: opacity,\n      backgroundProps: {\n        opacity\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, \"Account\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, \"Close me\")));\n  } // Search //\n\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const onChange = e => setSearchTerm(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    searchNews(searchTerm);\n  };\n\n  if (isAuthenticated !== true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }\n    });\n  } // insert DataViews when ready to work with api data\n\n\n  return /*#__PURE__*/React.createElement(Global, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 6\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Collections\")), /*#__PURE__*/React.createElement(FancyModalButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(DataView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  searchNews: PropTypes.func.isRequired,\n  currentResults: state.topStories.currentResults,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  searchNews\n})(DashBoard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/OneDrive/Desktop/papers/client/src/components/layout/Dashboard.js"],"names":["React","useState","Redirect","Link","connect","PropTypes","searchNews","DataView","styled","Modal","ModalProvider","BaseModalBackground","Nav","Button","Content","Header","Global","DashBoard","isAuthenticated","StyledModal","props","opacity","FancyModalButton","isOpen","setIsOpen","setOpacity","toggleModal","e","afterOpen","setTimeout","beforeClose","Promise","resolve","searchTerm","setSearchTerm","onChange","target","value","onSubmit","preventDefault","mapStateToProps","state","func","isRequired","currentResults","topStories","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { searchNews } from '../../actions/searchNews';\r\nimport DataView from '../layout/DataView';\r\n\r\nimport styled from 'styled-components';\r\nimport Modal, { ModalProvider, BaseModalBackground } from \"styled-react-modal\";\r\n\r\nimport Nav from '../../styled/Nav';\r\nimport Button from '../../styled/Button';\r\nimport Content from '../../styled/Content';\r\nimport Header from '../../styled/Header';\r\nimport Global from '../../styled/Global';\r\n\r\nconst DashBoard = ({ searchNews, isAuthenticated }) => {\r\n\r\n\t// Modal //\r\n\tconst StyledModal = Modal.styled`\r\n\twidth: 20rem;\r\n\theight: 20rem;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: white;\r\n\topacity: ${props => props.opacity};\r\n\ttransition: opacity ease 500ms;\r\n\t`;\r\n\r\n\tfunction FancyModalButton() {\r\n\r\n\t\tconst [isOpen, setIsOpen] = useState(false);\r\n\t\tconst [opacity, setOpacity] = useState(0);\r\n\r\n\t\tfunction toggleModal(e) {\r\n\t\t\tsetIsOpen(!isOpen);\r\n\t\t}\r\n\r\n\t\tfunction afterOpen() {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\tsetOpacity(1);\r\n\t\t\t}, 10);\r\n\t\t}\r\n\r\n\t\tfunction beforeClose() {\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\tsetOpacity(0);\r\n\t\t\tsetTimeout(resolve, 200);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<button onClick={toggleModal}>Account</button>\r\n\t\t\t<StyledModal\r\n\t\t\t\tisOpen={isOpen}\r\n\t\t\t\tafterOpen={afterOpen}\r\n\t\t\t\tbeforeClose={beforeClose}\r\n\t\t\t\tonBackgroundClick={toggleModal}\r\n\t\t\t\tonEscapeKeydown={toggleModal}\r\n\t\t\t\topacity={opacity}\r\n\t\t\t\tbackgroundProps={{ opacity }}\r\n\t\t\t>\r\n\t\t\t\t<span>Account</span>\r\n\t\t\t\t<button onClick={toggleModal}>Close me</button>\r\n\t\t\t</StyledModal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// Search //\r\n\tconst [searchTerm, setSearchTerm] = useState('');\r\n\r\n\tconst onChange = (e) => setSearchTerm(e.target.value);\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsearchNews(searchTerm);\r\n\t};\r\n\r\n\tif (isAuthenticated !== true) {\r\n\t\treturn <Redirect to='/' />;\r\n\t}\r\n\r\n\t// insert DataViews when ready to work with api data\r\n\treturn (\r\n\t\t<Global>\r\n\t\t\t<Header>\r\n\t\t\t\t<Nav>\r\n\t\t\t\t\t<Button>\r\n\t\t\t\t\t\tSearch\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button>\r\n\t\t\t\t\t\t<Link to='/collection'>Collections</Link>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<FancyModalButton />\r\n\t\t\t\t\t\r\n\t\t\t\t</Nav>\r\n\t\t\t</Header>\r\n\t\t\t<DataView />\r\n\r\n\t\t\t<Content />\r\n\t\t</Global>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tsearchNews: PropTypes.func.isRequired,\r\n\tcurrentResults: state.topStories.currentResults,\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchNews })(DashBoard);\r\n"]},"metadata":{},"sourceType":"module"}