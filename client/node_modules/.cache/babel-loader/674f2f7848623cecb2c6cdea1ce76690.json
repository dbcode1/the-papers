{"ast":null,"code":"import { ADD_COLLECTION_SUCCESS, ADD_COLLECTION_FAILURE, GET_COLLECTIONS_SUCCESS, GET_COLLECTIONS_FAILURE, DELETE_COLLECTION_SUCCESS, DELETE_COLLECTION_FAILURE } from './types';\n\nconst axios = require('axios'); // to be called on select in card and on collections view\n\n\nexport const getCollections = () => async (dispatch, req, res) => {\n  try {\n    const res = await axios.get('/container');\n    console.log(\"get\", res);\n    dispatch({\n      type: GET_COLLECTIONS_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_COLLECTIONS_FAILURE,\n      payload: res\n    });\n  }\n};\nexport const addCollection = title => async (dispatch, res, req) => {\n  console.log(\"addCollection\");\n\n  try {\n    const res = await axios({\n      method: 'post',\n      url: '/container',\n      data: {\n        title: title\n      }\n    });\n    console.log(res);\n    dispatch({\n      type: ADD_COLLECTION_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ADD_COLLECTION_FAILURE\n    });\n  }\n};\nexport const deleteCollection = title => async (dispatch, res, req) => {\n  console.log(\"res\");\n\n  try {\n    const res = await axios.delete('/container', {\n      params: {\n        q: title\n      }\n    });\n    console.log(\"action\", res);\n    dispatch({\n      type: DELETE_COLLECTION_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_COLLECTION_FAILURE,\n      payload: res.data\n    });\n    console.log(err.message);\n  }\n};","map":{"version":3,"sources":["C:/Users/Daniel Brusky/OneDrive/Desktop/papers/client/src/actions/collection.js"],"names":["ADD_COLLECTION_SUCCESS","ADD_COLLECTION_FAILURE","GET_COLLECTIONS_SUCCESS","GET_COLLECTIONS_FAILURE","DELETE_COLLECTION_SUCCESS","DELETE_COLLECTION_FAILURE","axios","require","getCollections","dispatch","req","res","get","console","log","type","payload","data","err","addCollection","title","method","url","deleteCollection","delete","params","q","message"],"mappings":"AAAA,SACEA,sBADF,EAECC,sBAFD,EAGCC,uBAHD,EAICC,uBAJD,EAKCC,yBALD,EAMCC,yBAND,QAOO,SAPP;;AASA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM,OAAOC,QAAP,EAAiBC,GAAjB,EAAsBC,GAAtB,KAA8B;AACjE,MAAI;AACH,UAAMA,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,YAAV,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,GAAnB;AACAF,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEb,uBADE;AAERc,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFL,KAAD,CAAR;AAMA,GATD,CASE,OAAOC,GAAP,EAAY;AACbT,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEZ,uBADE;AAERa,MAAAA,OAAO,EAAEL;AAFD,KAAD,CAAR;AAIA;AACD,CAhBM;AAkBP,OAAO,MAAMQ,aAAa,GAAIC,KAAD,IAAW,OAAOX,QAAP,EAAiBE,GAAjB,EAAsBD,GAAtB,KAA8B;AACrEG,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,MAAI;AACH,UAAMH,GAAG,GAAG,MAAML,KAAK,CAAC;AACvBe,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,GAAG,EAAE,YAFkB;AAGvBL,MAAAA,IAAI,EAAE;AACLG,QAAAA,KAAK,EAAEA;AADF;AAHiB,KAAD,CAAvB;AAOAP,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEAF,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEf,sBADE;AAERgB,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFL,KAAD,CAAR;AAIA,GAdD,CAcE,OAAOC,GAAP,EAAY;AACbT,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEd;AADE,KAAD,CAAR;AAGA;AACD,CArBM;AAuBP,OAAO,MAAMsB,gBAAgB,GAAIH,KAAD,IAAW,OAAOX,QAAP,EAAiBE,GAAjB,EAAsBD,GAAtB,KAA8B;AACxEG,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,MAAG;AAEF,UAAMH,GAAG,GAAG,MAAML,KAAK,CAACkB,MAAN,CAAa,YAAb,EAA2B;AAC5CC,MAAAA,MAAM,EAAE;AACPC,QAAAA,CAAC,EAAEN;AADI;AADoC,KAA3B,CAAlB;AAMAP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,GAAtB;AACAF,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEX,yBADE;AAERY,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFL,KAAD,CAAR;AAIA,GAbD,CAaE,OAAOC,GAAP,EAAW;AACZT,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEV,yBADE;AAERW,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFL,KAAD,CAAR;AAIAJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACS,OAAhB;AACA;AACD,CAtBM","sourcesContent":["import {\r\n  ADD_COLLECTION_SUCCESS,\r\n\tADD_COLLECTION_FAILURE,\r\n\tGET_COLLECTIONS_SUCCESS,\r\n\tGET_COLLECTIONS_FAILURE,\r\n\tDELETE_COLLECTION_SUCCESS,\r\n\tDELETE_COLLECTION_FAILURE\r\n} from './types';\r\n\r\nconst axios = require('axios')\r\n\r\n// to be called on select in card and on collections view\r\nexport const getCollections = () => async (dispatch, req, res) => {\r\n\ttry {\r\n\t\tconst res = await axios.get('/container');\r\n\t\tconsole.log(\"get\", res)\r\n\t\tdispatch({\r\n\t\t\ttype: GET_COLLECTIONS_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\t\t\t\r\n\t\t});\r\n\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_COLLECTIONS_FAILURE,\r\n\t\t\tpayload: res\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const addCollection = (title) => async (dispatch, res, req) => {\r\n\tconsole.log(\"addCollection\")\r\n\ttry {\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: '/container',\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: title\r\n\t\t\t}\r\n\t\t} )\r\n\t\tconsole.log(res)\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_COLLECTION_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_COLLECTION_FAILURE,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteCollection = (title) => async (dispatch, res, req) => {\r\n\tconsole.log(\"res\")\r\n\ttry{\r\n\r\n\t\tconst res = await axios.delete('/container', {\r\n\t\t\tparams: {\r\n\t\t\t\tq: title,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tconsole.log(\"action\", res)\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_COLLECTION_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (err){\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_COLLECTION_FAILURE,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t\tconsole.log(err.message)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}