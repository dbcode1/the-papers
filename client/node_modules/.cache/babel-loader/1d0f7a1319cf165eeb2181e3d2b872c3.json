{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataView.js\";\nimport React, { useEffect, useState, Fragment } from 'react'; //import { Link, withRouter } from 'react-router-dom';\n\nimport { topStories } from '../actions/topStories';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DataCard from './layout/DataCard';\nimport DashBoard from './layout/Dashboard';\nimport styled from 'styled-components';\nconst Container = styled.div``;\n\nconst DataView = ({\n  topStories\n}) => {\n  useEffect(() => {\n    topStories();\n  }, [topStories]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DashBoard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  })));\n};\n\nDataView.propTypes = {\n  currentResults: PropTypes.array.isRequired,\n  searchResults: PropTypes.array.isRequired,\n  topStories: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  currentResults: state.topStories.currentResults,\n  searchResults: state.searchNews.searchResults\n});\n\nexport default connect(mapStateToProps, {\n  topStories\n})(DataView);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataView.js"],"names":["React","useEffect","useState","Fragment","topStories","connect","PropTypes","DataCard","DashBoard","styled","Container","div","DataView","propTypes","currentResults","array","isRequired","searchResults","func","mapStateToProps","state","searchNews"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD,C,CACA;;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI,EAA7B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAoB;AACpCH,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,UAAU;AACV,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIA,sBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFD,CADD;AAQA,CAbD;;AAeAQ,QAAQ,CAACC,SAAT,GAAqB;AACpBC,EAAAA,cAAc,EAAER,SAAS,CAACS,KAAV,CAAgBC,UADZ;AAEpBC,EAAAA,aAAa,EAAEX,SAAS,CAACS,KAAV,CAAgBC,UAFX;AAGpBZ,EAAAA,UAAU,EAAEE,SAAS,CAACY,IAAV,CAAeF;AAHP,CAArB;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AACnCN,EAAAA,cAAc,EAAEM,KAAK,CAAChB,UAAN,CAAiBU,cADE;AAEnCG,EAAAA,aAAa,EAAEG,KAAK,CAACC,UAAN,CAAiBJ;AAFG,CAAZ,CAAxB;;AAKA,eAAeZ,OAAO,CAACc,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAyCQ,QAAzC,CAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\r\n//import { Link, withRouter } from 'react-router-dom';\r\nimport { topStories } from '../actions/topStories';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport DataCard from './layout/DataCard';\r\nimport DashBoard from './layout/Dashboard';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div``;\r\n\r\nconst DataView = ({ topStories }) => {\r\n\tuseEffect(() => {\r\n\t\ttopStories();\r\n\t}, [topStories]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<DashBoard></DashBoard>\r\n\t\t\t<Container>\r\n\t\t\t\t<DataCard />\r\n\t\t\t</Container>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nDataView.propTypes = {\r\n\tcurrentResults: PropTypes.array.isRequired,\r\n\tsearchResults: PropTypes.array.isRequired,\r\n\ttopStories: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcurrentResults: state.topStories.currentResults,\r\n\tsearchResults: state.searchNews.searchResults,\r\n});\r\n\r\nexport default connect(mapStateToProps, { topStories })(DataView);\r\n"]},"metadata":{},"sourceType":"module"}