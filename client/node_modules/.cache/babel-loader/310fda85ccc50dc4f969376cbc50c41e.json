{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataCard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = ({\n  data\n}) => {\n  const dataArr = Object.entries(data);\n  const nytArr = dataArr[0][1][0];\n  const gaurdianArr = dataArr[0][1][1];\n  const arr1 = [];\n\n  if (typeof nytArr !== 'undefined') {\n    nytArr.map(item => {\n      arr1.push(item);\n    });\n  } // console.log(data);\n  // // break up data\n  // const nyt = data.data[0];\n  // console.log(typeof );\n  // const gaurdian = data.data[1];\n  // console.log(data);\n  // const fred = () => {\n  // \tif (typeof data !== 'undefined') {\n  // \t\tdata.map(item => {\n  // \t\t\tconsole.log(item.section);\n  // \t\t\treturn <p>{item.section}</p>;\n  // \t\t});\n  // \t}\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, arr1.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, item.url)));\n}; // nytData.map(item => {\n// \tconsole.log(item);\n// })\n// const combineData = (arr1, arr2) => {\n// \treturn nytData !== null ? arr1.concat(arr2) : null;\n// };\n// const allData = combineData(nytData, gaurdianData);\n// allData.map(item => {\n// \tconsole.log(item);\n// });\n// //const mapData = () => {\n// if (allata !== null) {\n// \tallData.map(item => {\n// \t\tif (allData) {\n// \t\t\tconsole.log(item);\n// \t\t}\n// \t});\n// }\n// //};\n// if (typeof gaurdian !== 'undefined') {\n// \tgaurdian.map(item => {\n// \t\tconsole.log(item);\n// \t});\n// }\n\n\nDataCard.propTypes = {\n  DataCard: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","connect","PropTypes","DataCard","data","dataArr","Object","entries","nytArr","gaurdianArr","arr1","map","item","push","url","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAMC,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAeH,IAAf,CAAhB;AACA,QAAMI,MAAM,GAAGH,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,EAAc,CAAd,CAAf;AACA,QAAMI,WAAW,GAAGJ,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,EAAc,CAAd,CAApB;AACA,QAAMK,IAAI,GAAG,EAAb;;AAEA,MAAI,OAAOF,MAAP,KAAkB,WAAtB,EAAmC;AAClCA,IAAAA,MAAM,CAACG,GAAP,CAAWC,IAAI,IAAI;AAClBF,MAAAA,IAAI,CAACG,IAAL,CAAUD,IAAV;AACA,KAFD;AAGA,GAV6B,CAY9B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,IAAI,CAACC,GAAL,CAASC,IAAI,iBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACE,GAAV,CADA,CADF,CADD;AAOA,CAnCD,C,CAoCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAX,QAAQ,CAACY,SAAT,GAAqB;AACpBZ,EAAAA,QAAQ,EAAED,SAAS,CAACc,IAAV,CAAeC,UADL;AAEpBb,EAAAA,IAAI,EAAEF,SAAS,CAACgB,MAAV,CAAiBD;AAFH,CAArB;;AAIA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjChB,EAAAA,IAAI,EAAEgB,KAAK,CAAChB;AADqB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACkB,eAAD,CAAP,CAAyBhB,QAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = ({ data }) => {\r\n\tconst dataArr = Object.entries(data);\r\n\tconst nytArr = dataArr[0][1][0];\r\n\tconst gaurdianArr = dataArr[0][1][1];\r\n\tconst arr1 = [];\r\n\r\n\tif (typeof nytArr !== 'undefined') {\r\n\t\tnytArr.map(item => {\r\n\t\t\tarr1.push(item);\r\n\t\t});\r\n\t}\r\n\r\n\t// console.log(data);\r\n\t// // break up data\r\n\t// const nyt = data.data[0];\r\n\t// console.log(typeof );\r\n\t// const gaurdian = data.data[1];\r\n\r\n\t// console.log(data);\r\n\t// const fred = () => {\r\n\t// \tif (typeof data !== 'undefined') {\r\n\t// \t\tdata.map(item => {\r\n\t// \t\t\tconsole.log(item.section);\r\n\t// \t\t\treturn <p>{item.section}</p>;\r\n\t// \t\t});\r\n\t// \t}\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<ol>\r\n\t\t\t{arr1.map(item => (\r\n\t\t\t\t<li>{item.url}</li>\r\n\t\t\t))}\r\n\t\t</ol>\r\n\t);\r\n};\r\n// nytData.map(item => {\r\n// \tconsole.log(item);\r\n// })\r\n\r\n// const combineData = (arr1, arr2) => {\r\n// \treturn nytData !== null ? arr1.concat(arr2) : null;\r\n// };\r\n\r\n// const allData = combineData(nytData, gaurdianData);\r\n// allData.map(item => {\r\n// \tconsole.log(item);\r\n// });\r\n\r\n// //const mapData = () => {\r\n// if (allata !== null) {\r\n// \tallData.map(item => {\r\n// \t\tif (allData) {\r\n// \t\t\tconsole.log(item);\r\n// \t\t}\r\n// \t});\r\n// }\r\n// //};\r\n\r\n// if (typeof gaurdian !== 'undefined') {\r\n// \tgaurdian.map(item => {\r\n// \t\tconsole.log(item);\r\n// \t});\r\n// }\r\n\r\nDataCard.propTypes = {\r\n\tDataCard: PropTypes.func.isRequired,\r\n\tdata: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n\tdata: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}