{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataCard.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = (props, nycState, gaurdianData) => {\n  const nyc = props.nycState;\n  const gaurdian = props.gaurdianData;\n  const filteredNyc = [];\n  const filteredGaurdian = [];\n\n  const getNycResults = () => {\n    if (nyc) {\n      const nycArr = Object.entries(nyc); // nycArr.map(([key, value]) => {\n      // \tif (key === 'data') {\n      // \t\tconsole.log(value);\n      // \t}\n      // });\n      // // //console.log(typeof nycArr);\n\n      const results = nycArr[0][1].results;\n      console.log(results);\n      results.map(item => {\n        filteredNyc.push(item);\n      });\n      console.log(nycArr[0][1].results);\n\n      for (const item in nycArr) {//console.log(nycArr[item]);\n      }\n    }\n  }; // const nycResults = getNycResults();ff\n  // console.log(nycResults);\n  // nycResults.map(item => {\n  // \tconsole.log(item);\n  // });\n  // const nycFiltered = Object.keys(nyc).forEach(\n  // \tkey => nyc[key] == null && delete nyc[key]\n  // );\n  // for (let item in nyc) {\n  // \t//console.log(nyc[item]);\n  // }\n  // }\n\n\n  getNycResults();\n  return /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, filteredNyc.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, item.title)), filteredGaurdian.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, item.url.key)));\n};\n\nDataCard.propTypes = {\n  nycState: PropTypes.object.isRequired,\n  gaurdianData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  nycState: state.nyc.nycState,\n  gaurdianData: state.gaurdian.gaurdianData\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","connect","PropTypes","DataCard","props","nycState","gaurdianData","nyc","gaurdian","filteredNyc","filteredGaurdian","getNycResults","nycArr","Object","entries","results","console","log","map","item","push","title","url","key","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,YAAlB,KAAmC;AACnD,QAAMC,GAAG,GAAGH,KAAK,CAACC,QAAlB;AACA,QAAMG,QAAQ,GAAGJ,KAAK,CAACE,YAAvB;AACA,QAAMG,WAAW,GAAG,EAApB;AACA,QAAMC,gBAAgB,GAAG,EAAzB;;AAEA,QAAMC,aAAa,GAAG,MAAM;AAC3B,QAAIJ,GAAJ,EAAS;AACR,YAAMK,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAeP,GAAf,CAAf,CADQ,CAGR;AACA;AACA;AACA;AACA;AACA;;AACA,YAAMQ,OAAO,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,EAAaG,OAA7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAA,MAAAA,OAAO,CAACG,GAAR,CAAYC,IAAI,IAAI;AACnBV,QAAAA,WAAW,CAACW,IAAZ,CAAiBD,IAAjB;AACA,OAFD;AAIAH,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,EAAaG,OAAzB;;AAEA,WAAK,MAAMI,IAAX,IAAmBP,MAAnB,EAA2B,CAC1B;AACA;AACD;AACD,GAtBD,CANmD,CA8BnD;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AACAD,EAAAA,aAAa;AACb,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,WAAW,CAACS,GAAZ,CAAgBC,IAAI,iBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACE,KAAV,CADA,CADF,EAIEX,gBAAgB,CAACQ,GAAjB,CAAqBC,IAAI,iBACzB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACG,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBH,IAAI,CAACG,GAAL,CAASC,GAA7B,CADA,CAJF,CADD;AAUA,CAzDD;;AA0DApB,QAAQ,CAACqB,SAAT,GAAqB;AACpBnB,EAAAA,QAAQ,EAAEH,SAAS,CAACuB,MAAV,CAAiBC,UADP;AAEpBpB,EAAAA,YAAY,EAAEJ,SAAS,CAACuB,MAAV,CAAiBC;AAFX,CAArB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCvB,EAAAA,QAAQ,EAAEuB,KAAK,CAACrB,GAAN,CAAUF,QADa;AAEjCC,EAAAA,YAAY,EAAEsB,KAAK,CAACpB,QAAN,CAAeF;AAFI,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAAC0B,eAAD,CAAP,CAAyBxB,QAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = (props, nycState, gaurdianData) => {\r\n\tconst nyc = props.nycState;\r\n\tconst gaurdian = props.gaurdianData;\r\n\tconst filteredNyc = [];\r\n\tconst filteredGaurdian = [];\r\n\r\n\tconst getNycResults = () => {\r\n\t\tif (nyc) {\r\n\t\t\tconst nycArr = Object.entries(nyc);\r\n\r\n\t\t\t// nycArr.map(([key, value]) => {\r\n\t\t\t// \tif (key === 'data') {\r\n\t\t\t// \t\tconsole.log(value);\r\n\t\t\t// \t}\r\n\t\t\t// });\r\n\t\t\t// // //console.log(typeof nycArr);\r\n\t\t\tconst results = nycArr[0][1].results;\r\n\t\t\tconsole.log(results);\r\n\t\t\tresults.map(item => {\r\n\t\t\t\tfilteredNyc.push(item);\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(nycArr[0][1].results);\r\n\r\n\t\t\tfor (const item in nycArr) {\r\n\t\t\t\t//console.log(nycArr[item]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// const nycResults = getNycResults();ff\r\n\t// console.log(nycResults);\r\n\r\n\t// nycResults.map(item => {\r\n\t// \tconsole.log(item);\r\n\t// });\r\n\r\n\t// const nycFiltered = Object.keys(nyc).forEach(\r\n\t// \tkey => nyc[key] == null && delete nyc[key]\r\n\t// );\r\n\r\n\t// for (let item in nyc) {\r\n\t// \t//console.log(nyc[item]);\r\n\t// }\r\n\r\n\t// }\r\n\tgetNycResults();\r\n\treturn (\r\n\t\t<ol>\r\n\t\t\t{filteredNyc.map(item => (\r\n\t\t\t\t<li>{item.title}</li>\r\n\t\t\t))}\r\n\t\t\t{filteredGaurdian.map(item => (\r\n\t\t\t\t<li key={item.url}>{item.url.key}</li>\r\n\t\t\t))}\r\n\t\t</ol>\r\n\t);\r\n};\r\nDataCard.propTypes = {\r\n\tnycState: PropTypes.object.isRequired,\r\n\tgaurdianData: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tnycState: state.nyc.nycState,\r\n\tgaurdianData: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}