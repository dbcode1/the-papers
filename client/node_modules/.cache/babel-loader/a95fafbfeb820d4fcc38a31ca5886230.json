{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataCard.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = (props, nycState, gaurdianData) => {\n  const nyc = props.nycState;\n  const gaurdian = props.gaurdianData;\n  const filteredNyc = [];\n  const filteredGaurdian = [];\n  const nycData = Object.entries(nyc.data.results);\n  nycData.forEach(([key, value]) => {\n    console.log(value);\n  });\n  return /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, nycData.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, item)));\n};\n\nDataCard.propTypes = {\n  nycState: PropTypes.object.isRequired,\n  gaurdianData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  nycState: state.nyc.nycState,\n  gaurdianData: state.gaurdian.gaurdianData\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","connect","PropTypes","DataCard","props","nycState","gaurdianData","nyc","gaurdian","filteredNyc","filteredGaurdian","nycData","Object","entries","data","results","forEach","key","value","console","log","map","item","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,YAAlB,KAAmC;AACnD,QAAMC,GAAG,GAAGH,KAAK,CAACC,QAAlB;AACA,QAAMG,QAAQ,GAAGJ,KAAK,CAACE,YAAvB;AACA,QAAMG,WAAW,GAAG,EAApB;AACA,QAAMC,gBAAgB,GAAG,EAAzB;AAEA,QAAMC,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAeN,GAAG,CAACO,IAAJ,CAASC,OAAxB,CAAhB;AAEAJ,EAAAA,OAAO,CAACK,OAAR,CAAgB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,GAFD;AAIA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEP,OAAO,CAACU,GAAR,CAAYC,IAAI,iBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADA,CADF,CADD;AAOA,CAnBD;;AAqBAnB,QAAQ,CAACoB,SAAT,GAAqB;AACpBlB,EAAAA,QAAQ,EAAEH,SAAS,CAACsB,MAAV,CAAiBC,UADP;AAEpBnB,EAAAA,YAAY,EAAEJ,SAAS,CAACsB,MAAV,CAAiBC;AAFX,CAArB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCtB,EAAAA,QAAQ,EAAEsB,KAAK,CAACpB,GAAN,CAAUF,QADa;AAEjCC,EAAAA,YAAY,EAAEqB,KAAK,CAACnB,QAAN,CAAeF;AAFI,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACyB,eAAD,CAAP,CAAyBvB,QAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = (props, nycState, gaurdianData) => {\r\n\tconst nyc = props.nycState;\r\n\tconst gaurdian = props.gaurdianData;\r\n\tconst filteredNyc = [];\r\n\tconst filteredGaurdian = [];\r\n\r\n\tconst nycData = Object.entries(nyc.data.results);\r\n\r\n\tnycData.forEach(([key, value]) => {\r\n\t\tconsole.log(value);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<ol>\r\n\t\t\t{nycData.map(item => (\r\n\t\t\t\t<li>{item}</li>\r\n\t\t\t))}\r\n\t\t</ol>\r\n\t);\r\n};\r\n\r\nDataCard.propTypes = {\r\n\tnycState: PropTypes.object.isRequired,\r\n\tgaurdianData: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tnycState: state.nyc.nycState,\r\n\tgaurdianData: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}