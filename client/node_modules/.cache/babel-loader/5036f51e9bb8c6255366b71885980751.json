{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataView.js\";\nimport React, { useEffect } from 'react'; //import { Link, withRouter } from 'react-router-dom';\n\nimport { getData } from '../actions/data';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataView = ({\n  data,\n  getData\n}) => {\n  useEffect(() => {\n    getData();\n  }, [getData]);\n  const results = data.data;\n\n  if (results !== null) {\n    results.map(items => {\n      const news = items.data.response;\n      console.log(data);\n\n      if (news !== 'undefined') {\n        console.log(typeof news); //console.log(Object.keys(news));\n        //console.log(Object.entries(items.data.response));\n        // const nytNews = items.data.results;\n        // const gaurdNews = items.data.response;\n        // console.log(nytNews, gaurdNews)\n      }\n    });\n  } // const dataObj = Object.entries(data.data);\n\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    onClick: getData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Reader\");\n};\n\nDataView.propTypes = {\n  DataView: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getData\n})(DataView);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataView.js"],"names":["React","useEffect","getData","connect","PropTypes","DataView","data","results","map","items","news","response","console","log","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQJ,EAAAA;AAAR,CAAD,KAAuB;AACvCD,EAAAA,SAAS,CAAC,MAAM;AACfC,IAAAA,OAAO;AACP,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,QAAMK,OAAO,GAAGD,IAAI,CAACA,IAArB;;AAEA,MAAIC,OAAO,KAAK,IAAhB,EAAsB;AACrBA,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,IAAI;AACpB,YAAMC,IAAI,GAAGD,KAAK,CAACH,IAAN,CAAWK,QAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;;AACA,UAAII,IAAI,KAAK,WAAb,EAA0B;AACzBE,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,IAAnB,EADyB,CAGzB;AACA;AACA;AACA;AACA;AACA;AACD,KAZD;AAaA,GArBsC,CAuBvC;;;AAEA,sBAAO;AAAI,IAAA,OAAO,EAAER,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACA,CA1BD;;AA4BAG,QAAQ,CAACS,SAAT,GAAqB;AACpBT,EAAAA,QAAQ,EAAED,SAAS,CAACW,IAAV,CAAeC,UADL;AAEpBV,EAAAA,IAAI,EAAEF,SAAS,CAACa,MAAV,CAAiBD;AAFH,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADqB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACe,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAAsCG,QAAtC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\n//import { Link, withRouter } from 'react-router-dom';\r\nimport { getData } from '../actions/data';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataView = ({ data, getData }) => {\r\n\tuseEffect(() => {\r\n\t\tgetData();\r\n\t}, [getData]);\r\n\r\n\tconst results = data.data;\r\n\r\n\tif (results !== null) {\r\n\t\tresults.map(items => {\r\n\t\t\tconst news = items.data.response;\r\n\t\t\tconsole.log(data);\r\n\t\t\tif (news !== 'undefined') {\r\n\t\t\t\tconsole.log(typeof news);\r\n\r\n\t\t\t\t//console.log(Object.keys(news));\r\n\t\t\t\t//console.log(Object.entries(items.data.response));\r\n\t\t\t\t// const nytNews = items.data.results;\r\n\t\t\t\t// const gaurdNews = items.data.response;\r\n\t\t\t\t// console.log(nytNews, gaurdNews)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// const dataObj = Object.entries(data.data);\r\n\r\n\treturn <h1 onClick={getData}>Reader</h1>;\r\n};\r\n\r\nDataView.propTypes = {\r\n\tDataView: PropTypes.func.isRequired,\r\n\tdata: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tdata: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps, { getData })(DataView);\r\n"]},"metadata":{},"sourceType":"module"}