{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\auth\\\\Logout.js\";\nimport React, { Fragment, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { logout } from '../../actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport { setAuthToken } from '../../utils/setAuthToken';\nconst Button = styled.div`\n\tdisplay: block;\n\tpadding: 8px;\n\tmargin: 1em auto;\n\tmax-width: 40%;\n\ttext-align: center;\n\tfont-size: 1em;\n\tfont-weight: 500;\n\ttext-decoration: none;\n\tletter-spacing: 0.8px;\n\tcolor: midnightblue;\n\tbackground-color: white;\n\ttransition: color 0.4s;\n\tborder: 1px solid lightcyan;\n\tborder-radius: 4px;\n\n\t&:hover {\n\t\ttext-decoration: none;\n\t\tcolor: orange;\n\t}\n`;\n\nconst Logout = (isAuthenticated, setAuthToken, token) => {\n  const handleClick = useCallback(e => {\n    setAuthToken(token);\n  }, [, setAuthToken, token]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, isAuthenticated ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, \"Logout\") : '');\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  token: state.auth.token\n});\n\nexport default connect(mapStateToProps, {\n  logout\n})(Logout);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/auth/Logout.js"],"names":["React","Fragment","useCallback","connect","styled","logout","Redirect","setAuthToken","Button","div","Logout","isAuthenticated","token","handleClick","e","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,MAAMC,MAAM,GAAGJ,MAAM,CAACK,GAAI;;;;;;;;;;;;;;;;;;;;CAA1B;;AAsBA,MAAMC,MAAM,GAAG,CAACC,eAAD,EAAkBJ,YAAlB,EAAgCK,KAAhC,KAA0C;AACxD,QAAMC,WAAW,GAAGX,WAAW,CAC7BY,CAAD,IAAO;AACNP,IAAAA,YAAY,CAACK,KAAD,CAAZ;AACA,GAH6B,EAI9B,GAAGL,YAAH,EAAiBK,KAAjB,CAJ8B,CAA/B;AAMA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,eAAe,gBAAG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAAmD,EADpE,CADD;AAKA,CAZD;;AAaA,MAAME,eAAe,GAAIC,KAAD,KAAY;AACnCL,EAAAA,eAAe,EAAEK,KAAK,CAACC,IAAN,CAAWN,eADO;AAEnCC,EAAAA,KAAK,EAAEI,KAAK,CAACC,IAAN,CAAWL;AAFiB,CAAZ,CAAxB;;AAKA,eAAeT,OAAO,CAACY,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAqCK,MAArC,CAAf","sourcesContent":["import React, { Fragment, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { logout } from '../../actions/auth';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { setAuthToken } from '../../utils/setAuthToken';\r\n\r\nconst Button = styled.div`\r\n\tdisplay: block;\r\n\tpadding: 8px;\r\n\tmargin: 1em auto;\r\n\tmax-width: 40%;\r\n\ttext-align: center;\r\n\tfont-size: 1em;\r\n\tfont-weight: 500;\r\n\ttext-decoration: none;\r\n\tletter-spacing: 0.8px;\r\n\tcolor: midnightblue;\r\n\tbackground-color: white;\r\n\ttransition: color 0.4s;\r\n\tborder: 1px solid lightcyan;\r\n\tborder-radius: 4px;\r\n\r\n\t&:hover {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: orange;\r\n\t}\r\n`;\r\n\r\nconst Logout = (isAuthenticated, setAuthToken, token) => {\r\n\tconst handleClick = useCallback(\r\n\t\t(e) => {\r\n\t\t\tsetAuthToken(token);\r\n\t\t},\r\n\t\t[, setAuthToken, token]\r\n\t);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isAuthenticated ? <Button onClick={handleClick}>Logout</Button> : ''}\r\n\t\t</div>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\ttoken: state.auth.token,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Logout);\r\n"]},"metadata":{},"sourceType":"module"}