{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataCard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = ({\n  data\n}) => {\n  const dataArr = Object.entries(data);\n  console.log(data.data.nyt.map(item => {\n    return item;\n  }));\n  const nyt = dataArr[0][1][0];\n  const gaurdian = dataArr[0][1][1];\n  let gaurdianFiltered = [];\n\n  if (gaurdian !== undefined) {\n    gaurdianFiltered = gaurdian.filter(item => item !== undefined);\n  }\n\n  const nytArr = [];\n  const gaurdianArr = [];\n  gaurdianFiltered.map(item => {\n    gaurdianArr.push(item);\n  });\n\n  if (typeof nyt !== 'undefined') {\n    data.data[0].map(item => {\n      nytArr.push(item);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, nytArr.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, item.url)), gaurdianArr.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, item.webTitle)));\n};\n\nDataCard.propTypes = {\n  DataCard: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","connect","PropTypes","DataCard","data","dataArr","Object","entries","console","log","nyt","map","item","gaurdian","gaurdianFiltered","undefined","filter","nytArr","gaurdianArr","push","url","webTitle","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAMC,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAeH,IAAf,CAAhB;AACAI,EAAAA,OAAO,CAACC,GAAR,CACCL,IAAI,CAACA,IAAL,CAAUM,GAAV,CAAcC,GAAd,CAAkBC,IAAI,IAAI;AACzB,WAAOA,IAAP;AACA,GAFD,CADD;AAKA,QAAMF,GAAG,GAAGL,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,EAAc,CAAd,CAAZ;AACA,QAAMQ,QAAQ,GAAGR,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,EAAc,CAAd,CAAjB;AACA,MAAIS,gBAAgB,GAAG,EAAvB;;AAEA,MAAID,QAAQ,KAAKE,SAAjB,EAA4B;AAC3BD,IAAAA,gBAAgB,GAAGD,QAAQ,CAACG,MAAT,CAAgBJ,IAAI,IAAIA,IAAI,KAAKG,SAAjC,CAAnB;AACA;;AAED,QAAME,MAAM,GAAG,EAAf;AACA,QAAMC,WAAW,GAAG,EAApB;AAEAJ,EAAAA,gBAAgB,CAACH,GAAjB,CAAqBC,IAAI,IAAI;AAC5BM,IAAAA,WAAW,CAACC,IAAZ,CAAiBP,IAAjB;AACA,GAFD;;AAIA,MAAI,OAAOF,GAAP,KAAe,WAAnB,EAAgC;AAC/BN,IAAAA,IAAI,CAACA,IAAL,CAAU,CAAV,EAAaO,GAAb,CAAiBC,IAAI,IAAI;AACxBK,MAAAA,MAAM,CAACE,IAAP,CAAYP,IAAZ;AACA,KAFD;AAGA;;AAED,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEK,MAAM,CAACN,GAAP,CAAWC,IAAI,iBACf;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACQ,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBR,IAAI,CAACQ,GAAzB,CADA,CADF,EAIEF,WAAW,CAACP,GAAZ,CAAgBC,IAAI,iBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACS,QAAV,CADA,CAJF,CADD;AAUA,CAtCD;;AAwCAlB,QAAQ,CAACmB,SAAT,GAAqB;AACpBnB,EAAAA,QAAQ,EAAED,SAAS,CAACqB,IAAV,CAAeC,UADL;AAEpBpB,EAAAA,IAAI,EAAEF,SAAS,CAACuB,MAAV,CAAiBD;AAFH,CAArB;;AAIA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCvB,EAAAA,IAAI,EAAEuB,KAAK,CAACvB;AADqB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACyB,eAAD,CAAP,CAAyBvB,QAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = ({ data }) => {\r\n\tconst dataArr = Object.entries(data);\r\n\tconsole.log(\r\n\t\tdata.data.nyt.map(item => {\r\n\t\t\treturn item;\r\n\t\t})\r\n\t);\r\n\tconst nyt = dataArr[0][1][0];\r\n\tconst gaurdian = dataArr[0][1][1];\r\n\tlet gaurdianFiltered = [];\r\n\r\n\tif (gaurdian !== undefined) {\r\n\t\tgaurdianFiltered = gaurdian.filter(item => item !== undefined);\r\n\t}\r\n\r\n\tconst nytArr = [];\r\n\tconst gaurdianArr = [];\r\n\r\n\tgaurdianFiltered.map(item => {\r\n\t\tgaurdianArr.push(item);\r\n\t});\r\n\r\n\tif (typeof nyt !== 'undefined') {\r\n\t\tdata.data[0].map(item => {\r\n\t\t\tnytArr.push(item);\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ol>\r\n\t\t\t{nytArr.map(item => (\r\n\t\t\t\t<li key={item.url}>{item.url}</li>\r\n\t\t\t))}\r\n\t\t\t{gaurdianArr.map(item => (\r\n\t\t\t\t<li>{item.webTitle}</li>\r\n\t\t\t))}\r\n\t\t</ol>\r\n\t);\r\n};\r\n\r\nDataCard.propTypes = {\r\n\tDataCard: PropTypes.func.isRequired,\r\n\tdata: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n\tdata: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}