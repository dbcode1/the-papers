{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\layout\\\\DataCard.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = topStories => {\n  if (topStories === undefined || null || '') {\n    return;\n  }\n\n  const dragStart_handler = e => {\n    // Add the target element's id to the data transfer object\n    e.dataTransfer.setData('text/plain', e.target.id);\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  window.addEventListener('DOMContentLoaded', () => {\n    // Get the element by id\n    const element = document.getElementById('card'); // Add the ondragstart event listener\n\n    element.addEventListener('dragstart', dragStart_handler);\n  }); // const dragOver_handler = (e) => {\n  // \te.preventDefault();\n  // \te.dataTransfer.dropEffect = 'move';\n  // };\n  // function drop_handler(ev) {\n  // \tev.preventDefault();\n  // \t// Get the id of the target and add the moved element to the target's DOM\n  // \tconst data = ev.dataTransfer.getData('text/plain');\n  // \tev.target.appendChild(document.getElementById(data));\n  // }\n\n  return /*#__PURE__*/React.createElement(\"container\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"card\",\n    draggable: \"true\",\n    style: {\n      border: '3px solid green',\n      padding: '4em',\n      margin: '2em',\n      width: '100px',\n      height: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }\n  }, \"Trumps Lies\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, \"Another day another litany of insults and lies\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, \"image\"))));\n};\n\nDataCard.propTypes = {\n  currentResults: PropTypes.array.isRequired,\n  searchResults: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  currentResults: state.topStories.currentResults,\n  searchResults: state.searchNews.searchResults\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/layout/DataCard.js"],"names":["React","useState","useEffect","Fragment","connect","PropTypes","DataCard","topStories","undefined","dragStart_handler","e","dataTransfer","setData","target","id","dropEffect","window","addEventListener","element","document","getElementById","border","padding","margin","width","height","propTypes","currentResults","array","isRequired","searchResults","mapStateToProps","state","searchNews"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAIC,UAAD,IAAgB;AAChC,MAAIA,UAAU,KAAKC,SAAf,IAA4B,IAA5B,IAAoC,EAAxC,EAA4C;AAC3C;AACA;;AAED,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAChC;AACAA,IAAAA,CAAC,CAACC,YAAF,CAAeC,OAAf,CAAuB,YAAvB,EAAqCF,CAAC,CAACG,MAAF,CAASC,EAA9C;AACAJ,IAAAA,CAAC,CAACC,YAAF,CAAeI,UAAf,GAA4B,MAA5B;AACA,GAJD;;AAMAC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA4C,MAAM;AACjD;AACA,UAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhB,CAFiD,CAGjD;;AACAF,IAAAA,OAAO,CAACD,gBAAR,CAAyB,WAAzB,EAAsCR,iBAAtC;AACA,GALD,EAXgC,CAkBhC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,EAAE,EAAC,MADJ;AAEC,IAAA,SAAS,EAAC,MAFX;AAGC,IAAA,KAAK,EAAE;AACNY,MAAAA,MAAM,EAAE,iBADF;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,MAAM,EAAE,KAHF;AAINC,MAAAA,KAAK,EAAE,OAJD;AAKNC,MAAAA,MAAM,EAAE;AALF,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVD,eAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAXD,eAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZD,CADD,CADD,CADD;AAoBA,CAlDD;;AAoDAnB,QAAQ,CAACoB,SAAT,GAAqB;AACpBC,EAAAA,cAAc,EAAEtB,SAAS,CAACuB,KAAV,CAAgBC,UADZ;AAEpBC,EAAAA,aAAa,EAAEzB,SAAS,CAACuB,KAAV,CAAgBC;AAFX,CAArB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AACnCL,EAAAA,cAAc,EAAEK,KAAK,CAACzB,UAAN,CAAiBoB,cADE;AAEnCG,EAAAA,aAAa,EAAEE,KAAK,CAACC,UAAN,CAAiBH;AAFG,CAAZ,CAAxB;;AAKA,eAAe1B,OAAO,CAAC2B,eAAD,CAAP,CAAyBzB,QAAzB,CAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = (topStories) => {\r\n\tif (topStories === undefined || null || '') {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst dragStart_handler = (e) => {\r\n\t\t// Add the target element's id to the data transfer object\r\n\t\te.dataTransfer.setData('text/plain', e.target.id);\r\n\t\te.dataTransfer.dropEffect = 'move';\r\n\t};\r\n\r\n\twindow.addEventListener('DOMContentLoaded', () => {\r\n\t\t// Get the element by id\r\n\t\tconst element = document.getElementById('card');\r\n\t\t// Add the ondragstart event listener\r\n\t\telement.addEventListener('dragstart', dragStart_handler);\r\n\t});\r\n\r\n\t// const dragOver_handler = (e) => {\r\n\t// \te.preventDefault();\r\n\t// \te.dataTransfer.dropEffect = 'move';\r\n\t// };\r\n\r\n\t// function drop_handler(ev) {\r\n\t// \tev.preventDefault();\r\n\t// \t// Get the id of the target and add the moved element to the target's DOM\r\n\t// \tconst data = ev.dataTransfer.getData('text/plain');\r\n\t// \tev.target.appendChild(document.getElementById(data));\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<container>\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div\r\n\t\t\t\t\tid='card'\r\n\t\t\t\t\tdraggable='true'\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborder: '3px solid green',\r\n\t\t\t\t\t\tpadding: '4em',\r\n\t\t\t\t\t\tmargin: '2em',\r\n\t\t\t\t\t\twidth: '100px',\r\n\t\t\t\t\t\theight: 'auto',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<h1>Trumps Lies</h1>\r\n\t\t\t\t\t<p>Another day another litany of insults and lies</p>\r\n\t\t\t\t\t<p>image</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t</container>\r\n\t);\r\n};\r\n\r\nDataCard.propTypes = {\r\n\tcurrentResults: PropTypes.array.isRequired,\r\n\tsearchResults: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcurrentResults: state.topStories.currentResults,\r\n\tsearchResults: state.searchNews.searchResults,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}