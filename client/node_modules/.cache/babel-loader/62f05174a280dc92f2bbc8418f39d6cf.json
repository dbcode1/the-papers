{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = topStories => {\n  if (topStories === undefined || null || '') {\n    return;\n  }\n\n  console.log(topStories.currentResults);\n  return 'card';\n};\n\nDataCard.propTypes = {\n  currentResults: PropTypes.array.isRequired,\n  searchResults: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  currentResults: state.topStories.currentResults,\n  searchResults: state.searchNews.searchResults\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","useEffect","connect","PropTypes","DataCard","topStories","undefined","console","log","currentResults","propTypes","array","isRequired","searchResults","object","mapStateToProps","state","searchNews"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAIC,UAAD,IAAgB;AAChC,MAAIA,UAAU,KAAKC,SAAf,IAA4B,IAA5B,IAAoC,EAAxC,EAA4C;AAC3C;AACA;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAU,CAACI,cAAvB;AAEA,SAAO,MAAP;AACA,CARD;;AAUAL,QAAQ,CAACM,SAAT,GAAqB;AACpBD,EAAAA,cAAc,EAAEN,SAAS,CAACQ,KAAV,CAAgBC,UADZ;AAEpBC,EAAAA,aAAa,EAAEV,SAAS,CAACW,MAAV,CAAiBF;AAFZ,CAArB;;AAKA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AACnCP,EAAAA,cAAc,EAAEO,KAAK,CAACX,UAAN,CAAiBI,cADE;AAEnCI,EAAAA,aAAa,EAAEG,KAAK,CAACC,UAAN,CAAiBJ;AAFG,CAAZ,CAAxB;;AAKA,eAAeX,OAAO,CAACa,eAAD,CAAP,CAAyBX,QAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = (topStories) => {\r\n\tif (topStories === undefined || null || '') {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconsole.log(topStories.currentResults);\r\n\r\n\treturn 'card';\r\n};\r\n\r\nDataCard.propTypes = {\r\n\tcurrentResults: PropTypes.array.isRequired,\r\n\tsearchResults: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcurrentResults: state.topStories.currentResults,\r\n\tsearchResults: state.searchNews.searchResults,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}