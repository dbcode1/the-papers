{"ast":null,"code":"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = (props, nyc, gaurdianData) => {\n  console.log(props.nyc); // const nyc = props.nycState;\n  // const gaurdian = props.gaurdianData;\n  // const filteredNyc = [];\n  // const filteredGaurdian = [];\n  // // const initialState = {\n  // // \tfilteredNyc: []\n  // // };\n  // //\tconst [filteredNews, setNews] = usestate(initialState);\n  // const nycArr = Object.entries(nyc);\n  // const check = () => {\n  // \tif (nyc) {\n  // \t\tconst results = nyc.data.results;\n  // \t\treturn results;\n  // \t}\n  // };\n  // console.log(check());\n  // check.map(item => {\n  // \tconsole.log(item)\n  // })\n  //results.filter(item => console.log(item.title));\n  // }\n  // console.log(filteredNyc);\n  // filteredNyc.map(item => {\n  // \tconsole.log(item);\n  // });\n\n  return 'data';\n};\n\nDataCard.propTypes = {\n  nycState: PropTypes.object.isRequired,\n  gaurdianData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  nyc: state.nyc.nycState,\n  gaurdianData: state.gaurdian.gaurdianData\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","connect","PropTypes","DataCard","props","nyc","gaurdianData","console","log","propTypes","nycState","object","isRequired","mapStateToProps","state","gaurdian"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,GAAR,EAAaC,YAAb,KAA8B;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,GAAlB,EAD8C,CAE9C;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AACA,SAAO,MAAP;AACA,CAnCD;;AAqCAF,QAAQ,CAACM,SAAT,GAAqB;AACpBC,EAAAA,QAAQ,EAAER,SAAS,CAACS,MAAV,CAAiBC,UADP;AAEpBN,EAAAA,YAAY,EAAEJ,SAAS,CAACS,MAAV,CAAiBC;AAFX,CAArB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCT,EAAAA,GAAG,EAAES,KAAK,CAACT,GAAN,CAAUK,QADkB;AAEjCJ,EAAAA,YAAY,EAAEQ,KAAK,CAACC,QAAN,CAAeT;AAFI,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBV,QAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = (props, nyc, gaurdianData) => {\r\n\tconsole.log(props.nyc);\r\n\t// const nyc = props.nycState;\r\n\t// const gaurdian = props.gaurdianData;\r\n\t// const filteredNyc = [];\r\n\t// const filteredGaurdian = [];\r\n\r\n\t// // const initialState = {\r\n\t// // \tfilteredNyc: []\r\n\t// // };\r\n\r\n\t// //\tconst [filteredNews, setNews] = usestate(initialState);\r\n\r\n\t// const nycArr = Object.entries(nyc);\r\n\t// const check = () => {\r\n\t// \tif (nyc) {\r\n\t// \t\tconst results = nyc.data.results;\r\n\t// \t\treturn results;\r\n\t// \t}\r\n\t// };\r\n\r\n\t// console.log(check());\r\n\r\n\t// check.map(item => {\r\n\t// \tconsole.log(item)\r\n\t// })\r\n\t//results.filter(item => console.log(item.title));\r\n\t// }\r\n\r\n\t// console.log(filteredNyc);\r\n\r\n\t// filteredNyc.map(item => {\r\n\t// \tconsole.log(item);\r\n\t// });\r\n\treturn 'data';\r\n};\r\n\r\nDataCard.propTypes = {\r\n\tnycState: PropTypes.object.isRequired,\r\n\tgaurdianData: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tnyc: state.nyc.nycState,\r\n\tgaurdianData: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}