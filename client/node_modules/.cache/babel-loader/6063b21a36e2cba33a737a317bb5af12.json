{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\papers\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { login } from '../../actions/auth';\nimport { alert } from '../../actions/auth';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Alert from './Alert';\nimport styled from 'styled-components';\nimport DataForm from '../../styled/DataForm';\nimport DataField from '../../styled/DataField';\nimport Button from '../../styled/Button';\nconst Title = styled.h3`\n\tletter-spacing: 1.25px;\n\tmargin-bottom: 0.75em;\n`;\nconst Container = styled.div`\n\ttransform: translate(-50%, -50%);\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\toverflow: auto;\n\twidth: 80%;\n`;\nconst StyledSubmit = styled(Button)`\n\theight: 4em;\n\twidth: 15em;\n\tfont-size: 1em;\n\tmargin: 2em auto 1em auto;\n\tletter-spacing: 2.5px;\n\tborder-radius: 6px;\n`;\n\nconst Login = ({\n  login,\n  isAuthenticated,\n  alertMessage\n}) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DataForm, {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(DataField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, \"email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    required: true,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(DataField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    required: true,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(StyledSubmit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, \"Login\")));\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  alertMessage: state.alert.alertMessage\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/papers/client/src/components/auth/Login.js"],"names":["React","Fragment","useState","useEffect","login","alert","connect","Redirect","Alert","styled","DataForm","DataField","Button","Title","h3","Container","div","StyledSubmit","Login","isAuthenticated","alertMessage","formData","setFormData","email","password","onChange","e","target","name","value","onSubmit","preventDefault","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { login } from '../../actions/auth';\r\nimport { alert } from '../../actions/auth';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Alert from './Alert';\r\n\r\nimport styled from 'styled-components';\r\nimport DataForm from '../../styled/DataForm';\r\nimport DataField from '../../styled/DataField';\r\nimport Button from '../../styled/Button';\r\n\r\nconst Title = styled.h3`\r\n\tletter-spacing: 1.25px;\r\n\tmargin-bottom: 0.75em;\r\n`;\r\n\r\nconst Container = styled.div`\r\n\ttransform: translate(-50%, -50%);\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\toverflow: auto;\r\n\twidth: 80%;\r\n`;\r\n\r\nconst StyledSubmit = styled(Button)`\r\n\theight: 4em;\r\n\twidth: 15em;\r\n\tfont-size: 1em;\r\n\tmargin: 2em auto 1em auto;\r\n\tletter-spacing: 2.5px;\r\n\tborder-radius: 6px;\r\n`;\r\n\r\nconst Login = ({ login, isAuthenticated, alertMessage }) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t});\r\n\r\n\tconst { email, password } = formData;\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\t};\r\n\r\n\tconst onSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tlogin(email, password);\r\n\t};\r\n\r\n\tif (isAuthenticated) {\r\n\t\treturn <Redirect to='/dashboard' />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<DataForm onSubmit={(e) => onSubmit(e)}>\r\n\t\t\t\t<Title>Login</Title>\r\n\t\t\t\t<DataField>\r\n\t\t\t\t\t<label htmlFor='email'>email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\tminLength='6'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DataField>\r\n\t\t\t\t<DataField>\r\n\t\t\t\t\t<label htmlFor='password'>password</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\tminLength='6'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DataField>\r\n\t\t\t\t<StyledSubmit>Login</StyledSubmit>\r\n\t\t\t</DataForm>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\talertMessage: state.alert.alertMessage,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n"]},"metadata":{},"sourceType":"module"}