{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataView.js\";\nimport React, { useEffect } from 'react'; //import { Link, withRouter } from 'react-router-dom';\n\nimport { getData } from '../actions/data';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataView = ({\n  data,\n  getData\n}) => {\n  useEffect(() => {\n    getData();\n  }, [getData]); //console.log(data.data);\n  //console.log(data.data[0].results);\n  //\tconsole.log(Object.entries(data.data[0]));\n  //console.log(Object.entries(data));\n\n  const allData = Object.entries(data); // how do i skip over an array with null in it\n  // using filter to eliminate bad results\n  // WORK SMART FROM THE START TO SAVE TIME\n  // if (typeof array[index] !== 'undefined' && array[index] !== null) {\n  // console.log(typeof data.data);\n  // allData.map(newsArr => {\n  // \tif (newsArr[0].data !== null) {\n  // \t\tconsole.log(newsArr[1]);\n  // \t}\n  // });\n\n  if (data.data !== null) {\n    console.log(data.data);\n    data.data.map(items => {\n      const news1 = items;\n      console.log(news1);\n      const news = items.data.results;\n      console.log(news);\n    });\n  } // const dataObj = Object.entries(data.data);\n\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    onClick: getData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Reader\");\n};\n\nDataView.propTypes = {\n  DataView: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getData\n})(DataView);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataView.js"],"names":["React","useEffect","getData","connect","PropTypes","DataView","data","allData","Object","entries","console","log","map","items","news1","news","results","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQJ,EAAAA;AAAR,CAAD,KAAuB;AACvCD,EAAAA,SAAS,CAAC,MAAM;AACfC,IAAAA,OAAO;AACP,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT,CADuC,CAKvC;AACA;AAEA;AAEA;;AAEA,QAAMK,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAeH,IAAf,CAAhB,CAZuC,CAcvC;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAIA,IAAI,CAACA,IAAL,KAAc,IAAlB,EAAwB;AACvBI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACA,IAAjB;AACAA,IAAAA,IAAI,CAACA,IAAL,CAAUM,GAAV,CAAcC,KAAK,IAAI;AACtB,YAAMC,KAAK,GAAGD,KAAd;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,YAAMC,IAAI,GAAGF,KAAK,CAACP,IAAN,CAAWU,OAAxB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,KALD;AAMA,GApCsC,CAsCvC;;;AAEA,sBAAO;AAAI,IAAA,OAAO,EAAEb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACA,CAzCD;;AA2CAG,QAAQ,CAACY,SAAT,GAAqB;AACpBZ,EAAAA,QAAQ,EAAED,SAAS,CAACc,IAAV,CAAeC,UADL;AAEpBb,EAAAA,IAAI,EAAEF,SAAS,CAACgB,MAAV,CAAiBD;AAFH,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjChB,EAAAA,IAAI,EAAEgB,KAAK,CAAChB;AADqB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACkB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAAsCG,QAAtC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\n//import { Link, withRouter } from 'react-router-dom';\r\nimport { getData } from '../actions/data';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataView = ({ data, getData }) => {\r\n\tuseEffect(() => {\r\n\t\tgetData();\r\n\t}, [getData]);\r\n\r\n\t//console.log(data.data);\r\n\t//console.log(data.data[0].results);\r\n\r\n\t//\tconsole.log(Object.entries(data.data[0]));\r\n\r\n\t//console.log(Object.entries(data));\r\n\r\n\tconst allData = Object.entries(data);\r\n\r\n\t// how do i skip over an array with null in it\r\n\t// using filter to eliminate bad results\r\n\t// WORK SMART FROM THE START TO SAVE TIME\r\n\r\n\t// if (typeof array[index] !== 'undefined' && array[index] !== null) {\r\n\r\n\t// console.log(typeof data.data);\r\n\r\n\t// allData.map(newsArr => {\r\n\t// \tif (newsArr[0].data !== null) {\r\n\t// \t\tconsole.log(newsArr[1]);\r\n\t// \t}\r\n\t// });\r\n\r\n\tif (data.data !== null) {\r\n\t\tconsole.log(data.data);\r\n\t\tdata.data.map(items => {\r\n\t\t\tconst news1 = items;\r\n\t\t\tconsole.log(news1);\r\n\t\t\tconst news = items.data.results;\r\n\t\t\tconsole.log(news);\r\n\t\t});\r\n\t}\r\n\r\n\t// const dataObj = Object.entries(data.data);\r\n\r\n\treturn <h1 onClick={getData}>Reader</h1>;\r\n};\r\n\r\nDataView.propTypes = {\r\n\tDataView: PropTypes.func.isRequired,\r\n\tdata: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tdata: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps, { getData })(DataView);\r\n"]},"metadata":{},"sourceType":"module"}