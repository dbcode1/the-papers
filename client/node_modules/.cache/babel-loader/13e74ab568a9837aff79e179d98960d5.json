{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataView.js\";\nimport React, { useEffect, useState } from 'react'; //import { Link, withRouter } from 'react-router-dom';\n\nimport { getNyc } from '../actions/getNyc';\nimport { getGaurdian } from '../actions/getGaurdian';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DataCard from './DataCard';\nimport { empty } from '../utilities/empty';\n\nconst DataView = ({\n  getNyc,\n  getGaurdian,\n  nyc\n}) => {\n  useEffect(() => {\n    getNyc(); //getGaurdian();\n  }, []);\n  const [results, setResults] = useState([]);\n\n  if (empty(nyc)) {\n    console.log('one');\n  }\n\n  return /*#__PURE__*/React.createElement(DataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  });\n};\n\nDataView.propTypes = {\n  getNyc: PropTypes.func.isRequired,\n  getGaurdian: PropTypes.func.isRequired,\n  nyc: PropTypes.object.isRequired //gaurdianData: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  nyc: state.nyc //: state.gaurdian.gaurdianData\n\n});\n\nexport default connect(mapStateToProps, {\n  getNyc,\n  getGaurdian\n})(DataView);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataView.js"],"names":["React","useEffect","useState","getNyc","getGaurdian","connect","PropTypes","DataCard","empty","DataView","nyc","results","setResults","console","log","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,KAAT,QAAsB,oBAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEN,EAAAA,MAAF;AAAUC,EAAAA,WAAV;AAAuBM,EAAAA;AAAvB,CAAD,KAAkC;AAClDT,EAAAA,SAAS,CAAC,MAAM;AACfE,IAAAA,MAAM,GADS,CAEf;AACA,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;;AAEA,MAAIM,KAAK,CAACE,GAAD,CAAT,EAAgB;AACfG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA;;AACD,sBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,CAZD;;AAcAL,QAAQ,CAACM,SAAT,GAAqB;AACpBZ,EAAAA,MAAM,EAAEG,SAAS,CAACU,IAAV,CAAeC,UADH;AAEpBb,EAAAA,WAAW,EAAEE,SAAS,CAACU,IAAV,CAAeC,UAFR;AAGpBP,EAAAA,GAAG,EAAEJ,SAAS,CAACY,MAAV,CAAiBD,UAHF,CAIpB;;AAJoB,CAArB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCV,EAAAA,GAAG,EAAEU,KAAK,CAACV,GADsB,CAEjC;;AAFiC,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACc,eAAD,EAAkB;AAAEhB,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAAkDK,QAAlD,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n//import { Link, withRouter } from 'react-router-dom';\r\nimport { getNyc } from '../actions/getNyc';\r\nimport { getGaurdian } from '../actions/getGaurdian';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport DataCard from './DataCard';\r\nimport { empty } from '../utilities/empty';\r\n\r\nconst DataView = ({ getNyc, getGaurdian, nyc }) => {\r\n\tuseEffect(() => {\r\n\t\tgetNyc();\r\n\t\t//getGaurdian();\r\n\t}, []);\r\n\r\n\tconst [results, setResults] = useState([]);\r\n\r\n\tif (empty(nyc)) {\r\n\t\tconsole.log('one');\r\n\t}\r\n\treturn <DataCard />;\r\n};\r\n\r\nDataView.propTypes = {\r\n\tgetNyc: PropTypes.func.isRequired,\r\n\tgetGaurdian: PropTypes.func.isRequired,\r\n\tnyc: PropTypes.object.isRequired\r\n\t//gaurdianData: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n\tnyc: state.nyc\r\n\t//: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps, { getNyc, getGaurdian })(DataView);\r\n"]},"metadata":{},"sourceType":"module"}