{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_CARDS, CARD_ERROR, ADD_CARD, RETRIEVE_CARDS_SUCCESS, RETRIEVE_CARDS_FAILURE, DELETE_CARDS_SUCCESS, DELETE_CARDS_FAILURE, CLEAR_CARDS_SUCCESS, CLEAR_CARDS_FAILURE } from './types'; // get posts\n\nexport const getCards = searchTerm => async (dispatch, res, req) => {\n  try {\n    const res = await axios.get('/search-news', {\n      params: {\n        q: searchTerm\n      }\n    });\n    dispatch({\n      type: GET_CARDS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addCard = (title, img, url, containerTitle) => async (dispatch, res, req) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; // send card data to collection in DB\n\n  console.log('action collectionTtile', containerTitle);\n\n  try {\n    const res = await axios({\n      method: 'post',\n      url: '/card',\n      data: {\n        title,\n        img,\n        url,\n        containerTitle\n      },\n      config\n    });\n    dispatch({\n      type: ADD_CARD,\n      payload: res.data\n    });\n    console.log('addCard', res);\n  } catch (err) {\n    console.log(err.message);\n  }\n};\nexport const retrieveCards = title => async (dispatch, res, req) => {\n  try {\n    const res = await axios.get('/card', {\n      params: {\n        q: title\n      }\n    });\n    dispatch({\n      type: RETRIEVE_CARDS_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: RETRIEVE_CARDS_FAILURE,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const clearCards = title => async (dispatch, res, req) => {\n  try {\n    dispatch({\n      type: CLEAR_CARDS_SUCCESS,\n      payload: title\n    });\n  } catch (err) {\n    dispatch({\n      type: RETRIEVE_CARDS_FAILURE,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteCards = title => async (dispatch, res, req) => {\n  try {\n    await axios({\n      method: 'delete',\n      url: '/card',\n      data: {\n        title: title\n      }\n    });\n    console.log('cards deleted');\n    dispatch({\n      type: DELETE_CARDS_SUCCESS,\n      payload: title\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_CARDS_FAILURE,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Daniel Brusky/OneDrive/Desktop/papers/client/src/actions/card.js"],"names":["axios","setAlert","GET_CARDS","CARD_ERROR","ADD_CARD","RETRIEVE_CARDS_SUCCESS","RETRIEVE_CARDS_FAILURE","DELETE_CARDS_SUCCESS","DELETE_CARDS_FAILURE","CLEAR_CARDS_SUCCESS","CLEAR_CARDS_FAILURE","getCards","searchTerm","dispatch","res","req","get","params","q","type","payload","data","err","msg","response","statusText","status","addCard","title","img","url","containerTitle","config","headers","console","log","method","message","retrieveCards","clearCards","deleteCards"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {setAlert} from './alert';\r\nimport {\r\n  GET_CARDS,\r\n  CARD_ERROR, \r\n  ADD_CARD,\r\n  RETRIEVE_CARDS_SUCCESS,\r\n  RETRIEVE_CARDS_FAILURE,\r\n  DELETE_CARDS_SUCCESS,\r\n  DELETE_CARDS_FAILURE,\r\n  CLEAR_CARDS_SUCCESS,\r\n  CLEAR_CARDS_FAILURE\r\n} from './types'\r\n\r\n// get posts\r\nexport const getCards = (searchTerm) => async (dispatch, res, req) => {\r\n  try { \r\n    const res = await axios.get('/search-news', {\r\n\t\t\tparams: {\r\n\t\t\t\tq: searchTerm,\r\n\t\t\t},\r\n\t\t});\r\n    dispatch({\r\n      type: GET_CARDS,\r\n      payload: res.data\r\n    })\r\n  } catch(err) {\r\n    dispatch({\r\n      type: CARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const addCard = (title, img, url, containerTitle) => async (dispatch, res, req) =>  {\r\n  \r\n  const config = { \r\n\t\theaders: {'Content-Type': 'application/json'\r\n\t\t}\r\n  }\r\n  // send card data to collection in DB\r\n  console.log('action collectionTtile', containerTitle)\r\n  try {\r\n    const res = await axios({\r\n      method: 'post',\r\n      url: '/card',\r\n      data: {\r\n        title,\r\n        img,\r\n        url,\r\n        containerTitle \r\n      },\r\n      config\r\n    } ) \r\n\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: res.data\r\n    })\r\n\r\n    console.log('addCard', res)\r\n  }\r\n  \r\n  catch(err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const retrieveCards = (title) => async (dispatch, res, req) => {\r\n  try { \r\n    \r\n    const res = await axios.get('/card', {\r\n\t\t\tparams: {\r\n\t\t\t\tq: title,\r\n\t\t\t},\r\n    });\r\n\r\n    dispatch({\r\n      type: RETRIEVE_CARDS_SUCCESS,\r\n      payload: res.data\r\n    })\r\n      \r\n  } catch(err) {\r\n    dispatch({\r\n      type: RETRIEVE_CARDS_FAILURE,\r\n      payload: { msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearCards = (title) => async (dispatch, res, req) => {\r\n  try { \r\n    dispatch({\r\n      type: CLEAR_CARDS_SUCCESS,\r\n      payload: title\r\n    })\r\n      \r\n  } catch(err) {\r\n    dispatch({\r\n      type: RETRIEVE_CARDS_FAILURE,\r\n      payload: { msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteCards = (title) => async (dispatch, res, req) => {\r\n  \r\n  try { \r\n    await axios({\r\n\t\t\tmethod: 'delete',\r\n\t\t\turl: '/card',\r\n\t\t\tdata: {\r\n\t\t\t\ttitle : title\r\n\t\t\t}\r\n    })\r\n    console.log('cards deleted')\r\n    dispatch({\r\n      type: DELETE_CARDS_SUCCESS,\r\n      payload: title\r\n    })\r\n      \r\n  } catch(err) {\r\n    dispatch({\r\n      type: DELETE_CARDS_FAILURE,\r\n      payload: { msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}