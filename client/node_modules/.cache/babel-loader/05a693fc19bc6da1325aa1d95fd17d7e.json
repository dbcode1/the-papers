{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataView.js\";\nimport React, { useEffect } from 'react'; //import { Link, withRouter } from 'react-router-dom';\n\nimport { getData } from '../actions/data';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataView = ({\n  data,\n  getData\n}) => {\n  const allData = Object.entries(data);\n  console.log(allData);\n  console.log(data);\n  allData.map(item => {\n    console.log(item);\n  }); // const filtered = allData.filter(item => {\n  // \tconsole.log(item);\n  // \treturn typeof item !== 'undefined' && item !== null && item.length < 0;\n  // });\n  //console.log(filtered);\n  // if (typeof allData[item] !== 'undefined' && allData[item] !== null) {\n  // if (data !== null) {\n  // \tdata.map(items => {\n  // \t\tconst\n  // \t\tconst news1 = items[0];\n  // \t\tconsole.log(news1);\n  // \t\tconst news2 = items[1];\n  // \t\tconsole.log(news2);\n  // \t});\n  // }\n  // const dataObj = Object.entries(data.data);\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Reader\");\n};\n\nDataView.propTypes = {\n  DataView: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getData\n})(DataView);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataView.js"],"names":["React","useEffect","getData","connect","PropTypes","DataView","data","allData","Object","entries","console","log","map","item","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQJ,EAAAA;AAAR,CAAD,KAAuB;AACvC,QAAMK,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAeH,IAAf,CAAhB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEAC,EAAAA,OAAO,CAACK,GAAR,CAAYC,IAAI,IAAI;AACnBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACA,GAFD,EANuC,CASvC;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACA,CA9BD;;AAgCAR,QAAQ,CAACS,SAAT,GAAqB;AACpBT,EAAAA,QAAQ,EAAED,SAAS,CAACW,IAAV,CAAeC,UADL;AAEpBV,EAAAA,IAAI,EAAEF,SAAS,CAACa,MAAV,CAAiBD;AAFH,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADqB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACe,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAAsCG,QAAtC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\n//import { Link, withRouter } from 'react-router-dom';\r\nimport { getData } from '../actions/data';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataView = ({ data, getData }) => {\r\n\tconst allData = Object.entries(data);\r\n\r\n\tconsole.log(allData);\r\n\tconsole.log(data);\r\n\r\n\tallData.map(item => {\r\n\t\tconsole.log(item);\r\n\t});\r\n\t// const filtered = allData.filter(item => {\r\n\t// \tconsole.log(item);\r\n\t// \treturn typeof item !== 'undefined' && item !== null && item.length < 0;\r\n\t// });\r\n\r\n\t//console.log(filtered);\r\n\t// if (typeof allData[item] !== 'undefined' && allData[item] !== null) {\r\n\r\n\t// if (data !== null) {\r\n\t// \tdata.map(items => {\r\n\t// \t\tconst\r\n\t// \t\tconst news1 = items[0];\r\n\t// \t\tconsole.log(news1);\r\n\t// \t\tconst news2 = items[1];\r\n\t// \t\tconsole.log(news2);\r\n\t// \t});\r\n\t// }\r\n\r\n\t// const dataObj = Object.entries(data.data);\r\n\r\n\treturn <h1>Reader</h1>;\r\n};\r\n\r\nDataView.propTypes = {\r\n\tDataView: PropTypes.func.isRequired,\r\n\tdata: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tdata: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps, { getData })(DataView);\r\n"]},"metadata":{},"sourceType":"module"}