{"ast":null,"code":"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = (props, nycState, gaurdianData) => {\n  const nyc = props.nycState;\n  const gaurdian = props.gaurdianData; // const filteredNyc = [];\n  // const filteredGaurdian = [];\n  // const initialState = {\n  // \tfilteredNyc: []\n  // };\n  //\tconst [filteredNews, setNews] = usestate(initialState);\n  //const mapFilter = nyc ?\n\n  const filterMap = nyc ? nyc.map(item => {\n    console.log(item);\n  }) : '';\n  const filter = nyc ? Object.entries(nyc).filter(item => item !== undefined && item !== '') : '';\n\n  for (const item in filter) {\n    console.log(filter[item]);\n  }\n\n  console.log(filter);\n  console.log(typeof filter);\n  return 'data';\n};\n\nDataCard.propTypes = {\n  nycState: PropTypes.object.isRequired,\n  gaurdianData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  nycState: state.nyc.nycState,\n  gaurdianData: state.gaurdian.gaurdianData\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","connect","PropTypes","DataCard","props","nycState","gaurdianData","nyc","gaurdian","filterMap","map","item","console","log","filter","Object","entries","undefined","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,YAAlB,KAAmC;AACnD,QAAMC,GAAG,GAAGH,KAAK,CAACC,QAAlB;AACA,QAAMG,QAAQ,GAAGJ,KAAK,CAACE,YAAvB,CAFmD,CAGnD;AACA;AAEA;AACA;AACA;AAEA;AAEA;;AAEA,QAAMG,SAAS,GAAGF,GAAG,GAClBA,GAAG,CAACG,GAAJ,CAAQC,IAAI,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACC,GAFD,CADkB,GAIlB,EAJH;AAMA,QAAMG,MAAM,GAAGP,GAAG,GACfQ,MAAM,CAACC,OAAP,CAAeT,GAAf,EAAoBO,MAApB,CAA2BH,IAAI,IAAIA,IAAI,KAAKM,SAAT,IAAsBN,IAAI,KAAK,EAAlE,CADe,GAEf,EAFH;;AAIA,OAAK,MAAMA,IAAX,IAAmBG,MAAnB,EAA2B;AAC1BF,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACH,IAAD,CAAlB;AACA;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOC,MAAnB;AACA,SAAO,MAAP;AACA,CA/BD;;AAiCAX,QAAQ,CAACe,SAAT,GAAqB;AACpBb,EAAAA,QAAQ,EAAEH,SAAS,CAACiB,MAAV,CAAiBC,UADP;AAEpBd,EAAAA,YAAY,EAAEJ,SAAS,CAACiB,MAAV,CAAiBC;AAFX,CAArB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCjB,EAAAA,QAAQ,EAAEiB,KAAK,CAACf,GAAN,CAAUF,QADa;AAEjCC,EAAAA,YAAY,EAAEgB,KAAK,CAACd,QAAN,CAAeF;AAFI,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACoB,eAAD,CAAP,CAAyBlB,QAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = (props, nycState, gaurdianData) => {\r\n\tconst nyc = props.nycState;\r\n\tconst gaurdian = props.gaurdianData;\r\n\t// const filteredNyc = [];\r\n\t// const filteredGaurdian = [];\r\n\r\n\t// const initialState = {\r\n\t// \tfilteredNyc: []\r\n\t// };\r\n\r\n\t//\tconst [filteredNews, setNews] = usestate(initialState);\r\n\r\n\t//const mapFilter = nyc ?\r\n\r\n\tconst filterMap = nyc\r\n\t\t? nyc.map(item => {\r\n\t\t\t\tconsole.log(item);\r\n\t\t  })\r\n\t\t: '';\r\n\r\n\tconst filter = nyc\r\n\t\t? Object.entries(nyc).filter(item => item !== undefined && item !== '')\r\n\t\t: '';\r\n\r\n\tfor (const item in filter) {\r\n\t\tconsole.log(filter[item]);\r\n\t}\r\n\r\n\tconsole.log(filter);\r\n\tconsole.log(typeof filter);\r\n\treturn 'data';\r\n};\r\n\r\nDataCard.propTypes = {\r\n\tnycState: PropTypes.object.isRequired,\r\n\tgaurdianData: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tnycState: state.nyc.nycState,\r\n\tgaurdianData: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}