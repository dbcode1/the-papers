{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataView.js\";\nimport React, { useEffect } from 'react'; //import { Link, withRouter } from 'react-router-dom';\n\nimport { getNyc } from '../actions/getNyc';\nimport { getGaurdianData } from '../actions/getGaurdian';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DataCard from './DataCard';\n\nconst DataView = ({\n  getNyc,\n  getGaurdian,\n  data\n}) => {\n  useEffect(() => {\n    getNyc(), getGaurdian();\n  }, [getData, getGaurdian]);\n  return /*#__PURE__*/React.createElement(DataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  });\n};\n\nDataView.propTypes = {\n  DataView: PropTypes.func.isRequired,\n  nycdata: PropTypes.array.isRequired,\n  gaurdianData: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  nycData: state.nycData,\n  gaurdianData: state.gaurdianData\n});\n\nexport default connect(mapStateToProps, {\n  getNyc,\n  getGaurdian\n})(DataView);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataView.js"],"names":["React","useEffect","getNyc","getGaurdianData","connect","PropTypes","DataCard","DataView","getGaurdian","data","getData","propTypes","func","isRequired","nycdata","array","gaurdianData","mapStateToProps","state","nycData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEL,EAAAA,MAAF;AAAUM,EAAAA,WAAV;AAAuBC,EAAAA;AAAvB,CAAD,KAAmC;AACnDR,EAAAA,SAAS,CAAC,MAAM;AACfC,IAAAA,MAAM,IAAIM,WAAW,EAArB;AACA,GAFQ,EAEN,CAACE,OAAD,EAAUF,WAAV,CAFM,CAAT;AAIA,sBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,CAND;;AAQAD,QAAQ,CAACI,SAAT,GAAqB;AACpBJ,EAAAA,QAAQ,EAAEF,SAAS,CAACO,IAAV,CAAeC,UADL;AAEpBC,EAAAA,OAAO,EAAET,SAAS,CAACU,KAAV,CAAgBF,UAFL;AAGpBG,EAAAA,YAAY,EAAEX,SAAS,CAACU,KAAV,CAAgBF;AAHV,CAArB;;AAKA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AACjCC,EAAAA,OAAO,EAAED,KAAK,CAACC,OADkB;AAEjCH,EAAAA,YAAY,EAAEE,KAAK,CAACF;AAFa,CAAL,CAA7B;;AAKA,eAAeZ,OAAO,CAACa,eAAD,EAAkB;AAAEf,EAAAA,MAAF;AAAUM,EAAAA;AAAV,CAAlB,CAAP,CAAkDD,QAAlD,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\n//import { Link, withRouter } from 'react-router-dom';\r\nimport { getNyc } from '../actions/getNyc';\r\nimport { getGaurdianData } from '../actions/getGaurdian';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport DataCard from './DataCard';\r\n\r\nconst DataView = ({ getNyc, getGaurdian, data }) => {\r\n\tuseEffect(() => {\r\n\t\tgetNyc(), getGaurdian();\r\n\t}, [getData, getGaurdian]);\r\n\r\n\treturn <DataCard />;\r\n};\r\n\r\nDataView.propTypes = {\r\n\tDataView: PropTypes.func.isRequired,\r\n\tnycdata: PropTypes.array.isRequired,\r\n\tgaurdianData: PropTypes.array.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n\tnycData: state.nycData,\r\n\tgaurdianData: state.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps, { getNyc, getGaurdian })(DataView);\r\n"]},"metadata":{},"sourceType":"module"}