{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataView.js\";\n// import React, { useEffect } from 'react';\n// //import { Link, withRouter } from 'react-router-dom';\n// import { getData } from '../actions/data';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n// const DataView = ({ data, getData }) => {\n// \tuseEffect(() => {\n// \t\tgetData();\n// \t}, [getData]);\n// \tconst results = data.data;\n// \tresults.map(items => {\n// \t\tconsole.log(items);\n// \t});\n// \treturn <h1>Reader</h1>;\n// };\n// DataView.propTypes = {\n// \tDataView: PropTypes.func.isRequired,\n// \tdata: PropTypes.object.isRequired\n// };\n// const mapStateToProps = state => ({\n// \tdata: state.data\n// });\n// export default connect(mapStateToProps, { getData })(DataView);\nimport React, { useEffect } from 'react'; //import { Link, withRouter } from 'react-router-dom';\n\nimport { getData } from '../actions/data';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DataCard from './DataCard';\n\nconst DataView = ({\n  getData,\n  data\n}) => {\n  useEffect(() => {\n    getData();\n  }, [getData]);\n  return /*#__PURE__*/React.createElement(DataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  });\n};\n\nDataView.propTypes = {\n  DataView: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getData\n})(DataView);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataView.js"],"names":["React","useEffect","getData","connect","PropTypes","DataCard","DataView","data","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEJ,EAAAA,OAAF;AAAWK,EAAAA;AAAX,CAAD,KAAuB;AACvCN,EAAAA,SAAS,CAAC,MAAM;AACfC,IAAAA,OAAO;AACP,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,sBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,CAND;;AAQAI,QAAQ,CAACE,SAAT,GAAqB;AACpBF,EAAAA,QAAQ,EAAEF,SAAS,CAACK,IAAV,CAAeC,UADL;AAEpBH,EAAAA,IAAI,EAAEH,SAAS,CAACO,MAAV,CAAiBD;AAFH,CAArB;;AAIA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCN,EAAAA,IAAI,EAAEM,KAAK,CAACN;AADqB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACS,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAsCI,QAAtC,CAAf","sourcesContent":["// import React, { useEffect } from 'react';\r\n// //import { Link, withRouter } from 'react-router-dom';\r\n// import { getData } from '../actions/data';\r\n// import { connect } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\n\r\n// const DataView = ({ data, getData }) => {\r\n// \tuseEffect(() => {\r\n// \t\tgetData();\r\n// \t}, [getData]);\r\n\r\n// \tconst results = data.data;\r\n\r\n// \tresults.map(items => {\r\n// \t\tconsole.log(items);\r\n// \t});\r\n\r\n// \treturn <h1>Reader</h1>;\r\n// };\r\n\r\n// DataView.propTypes = {\r\n// \tDataView: PropTypes.func.isRequired,\r\n// \tdata: PropTypes.object.isRequired\r\n// };\r\n\r\n// const mapStateToProps = state => ({\r\n// \tdata: state.data\r\n// });\r\n\r\n// export default connect(mapStateToProps, { getData })(DataView);\r\n\r\nimport React, { useEffect } from 'react';\r\n//import { Link, withRouter } from 'react-router-dom';\r\nimport { getData } from '../actions/data';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport DataCard from './DataCard';\r\n\r\nconst DataView = ({ getData, data }) => {\r\n\tuseEffect(() => {\r\n\t\tgetData();\r\n\t}, [getData]);\r\n\r\n\treturn <DataCard />;\r\n};\r\n\r\nDataView.propTypes = {\r\n\tDataView: PropTypes.func.isRequired,\r\n\tdata: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n\tdata: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps, { getData })(DataView);\r\n"]},"metadata":{},"sourceType":"module"}