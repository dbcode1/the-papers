{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst newsItems = (nyc, gaurdian) => {\n  // if (state.nyc) {\n  // \treturn;\n  // }\n  const mapper = () => {\n    for (const item in nyc.nyc) {\n      return nyc.nyc[item];\n    }\n  };\n\n  console.log(mapper()); // const news = state.nyc((item, index) => {\n  // \treturn (\n  // \t\t<div key={index}>\n  // \t\t\t<p>{item.abstract} </p>\n  // \t\t</div>\n  // \t);\n  // });\n  // return <div>{news}</div>;\n  //const news = props.results.map((item, index) => {\n  // \treturn (\n  // \t\t<div key={index}>\n  // \t\t\t<p>{item.abstract} </p>\n  // \t\t</div>\n  // \t);\n  // });\n  // return <div>{news}</div>;\n  //console.log(typeof state.nyc);\n\n  return 'card';\n};\n\nnewsItems.propTypes = {\n  nyc: PropTypes.array.isRequired,\n  gaurdian: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  nyc: state.nyc.nyc,\n  gaurdian: state.gaurdian.gaurdianData\n});\n\nexport default connect(mapStateToProps)(newsItems);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","useEffect","connect","PropTypes","newsItems","nyc","gaurdian","mapper","item","console","log","propTypes","array","isRequired","object","mapStateToProps","state","gaurdianData"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACpC;AACA;AACA;AACA,QAAMC,MAAM,GAAG,MAAM;AACpB,SAAK,MAAMC,IAAX,IAAmBH,GAAG,CAACA,GAAvB,EAA4B;AAC3B,aAAOA,GAAG,CAACA,GAAJ,CAAQG,IAAR,CAAP;AACA;AACD,GAJD;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,EAAlB,EAVoC,CAYpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO,MAAP;AACA,CA9BD;;AAgCAH,SAAS,CAACO,SAAV,GAAsB;AACrBN,EAAAA,GAAG,EAAEF,SAAS,CAACS,KAAV,CAAgBC,UADA;AAErBP,EAAAA,QAAQ,EAAEH,SAAS,CAACW,MAAV,CAAiBD;AAFN,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCX,EAAAA,GAAG,EAAEW,KAAK,CAACX,GAAN,CAAUA,GADkB;AAEjCC,EAAAA,QAAQ,EAAEU,KAAK,CAACV,QAAN,CAAeW;AAFQ,CAAL,CAA7B;;AAKA,eAAef,OAAO,CAACa,eAAD,CAAP,CAAyBX,SAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst newsItems = (nyc, gaurdian) => {\r\n\t// if (state.nyc) {\r\n\t// \treturn;\r\n\t// }\r\n\tconst mapper = () => {\r\n\t\tfor (const item in nyc.nyc) {\r\n\t\t\treturn nyc.nyc[item];\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log(mapper());\r\n\r\n\t// const news = state.nyc((item, index) => {\r\n\t// \treturn (\r\n\t// \t\t<div key={index}>\r\n\t// \t\t\t<p>{item.abstract} </p>\r\n\t// \t\t</div>\r\n\t// \t);\r\n\t// });\r\n\t// return <div>{news}</div>;\r\n\t//const news = props.results.map((item, index) => {\r\n\t// \treturn (\r\n\t// \t\t<div key={index}>\r\n\t// \t\t\t<p>{item.abstract} </p>\r\n\t// \t\t</div>\r\n\t// \t);\r\n\t// });\r\n\t// return <div>{news}</div>;\r\n\t//console.log(typeof state.nyc);\r\n\treturn 'card';\r\n};\r\n\r\nnewsItems.propTypes = {\r\n\tnyc: PropTypes.array.isRequired,\r\n\tgaurdian: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tnyc: state.nyc.nyc,\r\n\tgaurdian: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(newsItems);\r\n"]},"metadata":{},"sourceType":"module"}