{"ast":null,"code":"import { ADD_COLLECTION_SUCCESS, ADD_COLLECTION_FAILURE, GET_COLLECTION_SUCCESS, GET_COLLECTION_FAILURE, DELETE_COLLECTION_SUCCESS, DELETE_COLLECTION_FAILURE } from './types';\n\nconst axios = require('axios'); // update \n\n\nexport const getCollections = () => async (dispatch, req, res) => {\n  try {\n    const res = await axios.get('/container');\n    console.log(\"get collections\", res);\n    dispatch({\n      type: GET_COLLECTION_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_COLLECTION_FAILURE,\n      payload: res\n    });\n  }\n};\nexport const addCollection = title => async (dispatch, res, req) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios({\n      method: 'post',\n      url: '/container',\n      data: {\n        title: title\n      },\n      config\n    });\n    console.log(res.data);\n    dispatch({\n      type: ADD_COLLECTION_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ADD_COLLECTION_FAILURE\n    });\n  }\n};\nexport const deleteCollection = title => async (dispatch, res, req) => {\n  try {\n    const res = await axios({\n      method: 'delete',\n      url: '/container',\n      data: {\n        title: title\n      }\n    });\n    console.log(\"delete\", res);\n    dispatch({\n      type: DELETE_COLLECTION_SUCCESS,\n      payload: title\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_COLLECTION_FAILURE,\n      payload: res.data\n    });\n    console.log(err.message);\n  }\n};","map":{"version":3,"sources":["C:/Users/Daniel Brusky/OneDrive/Desktop/papers/client/src/actions/collection.js"],"names":["ADD_COLLECTION_SUCCESS","ADD_COLLECTION_FAILURE","GET_COLLECTION_SUCCESS","GET_COLLECTION_FAILURE","DELETE_COLLECTION_SUCCESS","DELETE_COLLECTION_FAILURE","axios","require","getCollections","dispatch","req","res","get","console","log","type","payload","data","err","addCollection","title","config","headers","method","url","deleteCollection","message"],"mappings":"AAAA,SACEA,sBADF,EAECC,sBAFD,EAGCC,sBAHD,EAICC,sBAJD,EAKCC,yBALD,EAMCC,yBAND,QAOO,SAPP;;AASA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAGA;;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM,OAAOC,QAAP,EAAiBC,GAAjB,EAAsBC,GAAtB,KAA8B;AACjE,MAAI;AACH,UAAMA,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,YAAV,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,GAA/B;AACAF,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEb,sBADE;AAERc,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFL,KAAD,CAAR;AAKA,GARD,CAQE,OAAOC,GAAP,EAAY;AACbT,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEZ,sBADE;AAERa,MAAAA,OAAO,EAAEL;AAFD,KAAD,CAAR;AAIA;AACD,CAfM;AAiBP,OAAO,MAAMQ,aAAa,GAAIC,KAAD,IAAW,OAAOX,QAAP,EAAiBE,GAAjB,EAAsBD,GAAtB,KAA8B;AACrE,QAAMW,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB;AADK,GAAf;;AAKA,MAAI;AACH,UAAMX,GAAG,GAAG,MAAML,KAAK,CAAC;AACvBiB,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,GAAG,EAAE,YAFkB;AAGvBP,MAAAA,IAAI,EAAE;AACLG,QAAAA,KAAK,EAAEA;AADF,OAHiB;AAMvBC,MAAAA;AANuB,KAAD,CAAvB;AASAR,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACM,IAAhB;AAEAR,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEf,sBADE;AAERgB,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFL,KAAD,CAAR;AAIA,GAhBD,CAgBE,OAAOC,GAAP,EAAY;AACbT,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEd;AADE,KAAD,CAAR;AAGA;AACD,CA3BM;AA6BP,OAAO,MAAMwB,gBAAgB,GAAIL,KAAD,IAAW,OAAOX,QAAP,EAAiBE,GAAjB,EAAsBD,GAAtB,KAA8B;AAExE,MAAG;AACF,UAAMC,GAAG,GAAG,MAAML,KAAK,CAAC;AACvBiB,MAAAA,MAAM,EAAE,QADe;AAEvBC,MAAAA,GAAG,EAAE,YAFkB;AAGvBP,MAAAA,IAAI,EAAE;AACLG,QAAAA,KAAK,EAAGA;AADH;AAHiB,KAAD,CAAvB;AAQAP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,GAAtB;AAEAF,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEX,yBADE;AAERY,MAAAA,OAAO,EAAEI;AAFD,KAAD,CAAR;AAIA,GAfD,CAeE,OAAOF,GAAP,EAAW;AACZT,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEV,yBADE;AAERW,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFL,KAAD,CAAR;AAIAJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACQ,OAAhB;AACA;AACD,CAxBM","sourcesContent":["import {\r\n  ADD_COLLECTION_SUCCESS,\r\n\tADD_COLLECTION_FAILURE,\r\n\tGET_COLLECTION_SUCCESS,\r\n\tGET_COLLECTION_FAILURE,\r\n\tDELETE_COLLECTION_SUCCESS,\r\n\tDELETE_COLLECTION_FAILURE,\r\n} from './types';\r\n\r\nconst axios = require('axios')\r\n\r\n\r\n// update \r\nexport const getCollections = () => async (dispatch, req, res) => {\r\n\ttry {\r\n\t\tconst res = await axios.get('/container');\r\n\t\tconsole.log(\"get collections\", res)\r\n\t\tdispatch({\r\n\t\t\ttype: GET_COLLECTION_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_COLLECTION_FAILURE,\r\n\t\t\tpayload: res\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const addCollection = (title) => async (dispatch, res, req) => {\r\n\tconst config = { \r\n\t\theaders: {'Content-Type': 'application/json'\r\n\t\t}\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: '/container',\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: title\r\n\t\t\t},\r\n\t\t\tconfig\r\n\t\t} )\r\n\r\n\t\tconsole.log(res.data)\r\n\t\t\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_COLLECTION_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_COLLECTION_FAILURE,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteCollection = (title) => async (dispatch, res, req) => {\r\n\t\r\n\ttry{\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'delete',\r\n\t\t\turl: '/container',\r\n\t\t\tdata: {\r\n\t\t\t\ttitle : title\r\n\t\t\t}\r\n\t\t} )\r\n\r\n\t\tconsole.log(\"delete\", res)\r\n\t\t\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_COLLECTION_SUCCESS,\r\n\t\t\tpayload: title\r\n\t\t});\r\n\t} catch (err){\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_COLLECTION_FAILURE,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t\tconsole.log(err.message)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}