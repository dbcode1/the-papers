{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = (props, nyc) => {\n  const nycData = nyc;\n  console.log(nycData);\n  const [resData, setData] = useState({\n    nycResults: [],\n    gaurdianResults: []\n  });\n  useEffect(() => {\n    console.log('card');\n    setData({ ...resData,\n      nycResults: nycData\n    });\n  }, [nyc]); //console.log(hooks.nycResults);\n  // for (const item in nyc) {\n  // \tif (item === undefined || null) {\n  // \t\tconsole.log(nyc[item]);\n  // \t\tdelete nyc[item];\n  // \t\tconsole.log(nyc);\n  // \t}\n  // }\n  // // const initialState = {\n  // // \tfilteredNyc: []\n  // // };\n  // //\tconst [filteredNews, setNews] = usestate(initialState);\n  // const nycArr = Object.entries(nycData);\n  // console.log(nycData);\n  // const check = () => {\n  // \tif (nyc) {\n  // \t\tconst results = nyc.data.results;\n  // \t\treturn results;\n  // \t}\n  // };\n  // console.log(check());\n  // check.map(item => {\n  // \tconsole.log(item)\n  // })\n  //results.filter(item => console.log(item.title));\n  // }\n  // console.log(filteredNyc);\n  // filteredNyc.map(item => {\n  // \tconsole.log(item);\n  // });\n\n  return 'data';\n};\n\nDataCard.propTypes = {\n  nyc: PropTypes.object.isRequired //gaurdianData: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  nyc: state.nyc.nyc //gaurdianData: state.gaurdian.gaurdianData\n\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","useState","useEffect","connect","PropTypes","DataCard","props","nyc","nycData","console","log","resData","setData","nycResults","gaurdianResults","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAChC,QAAMC,OAAO,GAAGD,GAAhB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEA,QAAM,CAACG,OAAD,EAAUC,OAAV,IAAqBX,QAAQ,CAAC;AACnCY,IAAAA,UAAU,EAAE,EADuB;AAEnCC,IAAAA,eAAe,EAAE;AAFkB,GAAD,CAAnC;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACfO,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAE,IAAAA,OAAO,CAAC,EAAE,GAAGD,OAAL;AAAcE,MAAAA,UAAU,EAAEL;AAA1B,KAAD,CAAP;AACA,GAHQ,EAGN,CAACD,GAAD,CAHM,CAAT,CATgC,CAchC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AACA,SAAO,MAAP;AACA,CArDD;;AAuDAF,QAAQ,CAACU,SAAT,GAAqB;AACpBR,EAAAA,GAAG,EAAEH,SAAS,CAACY,MAAV,CAAiBC,UADF,CAEpB;;AAFoB,CAArB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCZ,EAAAA,GAAG,EAAEY,KAAK,CAACZ,GAAN,CAAUA,GADkB,CAEjC;;AAFiC,CAAL,CAA7B;;AAKA,eAAeJ,OAAO,CAACe,eAAD,CAAP,CAAyBb,QAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = (props, nyc) => {\r\n\tconst nycData = nyc;\r\n\tconsole.log(nycData);\r\n\r\n\tconst [resData, setData] = useState({\r\n\t\tnycResults: [],\r\n\t\tgaurdianResults: []\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('card');\r\n\t\tsetData({ ...resData, nycResults: nycData });\r\n\t}, [nyc]);\r\n\r\n\t//console.log(hooks.nycResults);\r\n\r\n\t// for (const item in nyc) {\r\n\t// \tif (item === undefined || null) {\r\n\t// \t\tconsole.log(nyc[item]);\r\n\t// \t\tdelete nyc[item];\r\n\t// \t\tconsole.log(nyc);\r\n\t// \t}\r\n\t// }\r\n\r\n\t// // const initialState = {\r\n\t// // \tfilteredNyc: []\r\n\t// // };\r\n\r\n\t// //\tconst [filteredNews, setNews] = usestate(initialState);\r\n\r\n\t// const nycArr = Object.entries(nycData);\r\n\t// console.log(nycData);\r\n\t// const check = () => {\r\n\t// \tif (nyc) {\r\n\t// \t\tconst results = nyc.data.results;\r\n\t// \t\treturn results;\r\n\t// \t}\r\n\t// };\r\n\r\n\t// console.log(check());\r\n\r\n\t// check.map(item => {\r\n\t// \tconsole.log(item)\r\n\t// })\r\n\t//results.filter(item => console.log(item.title));\r\n\t// }\r\n\r\n\t// console.log(filteredNyc);\r\n\r\n\t// filteredNyc.map(item => {\r\n\t// \tconsole.log(item);\r\n\t// });\r\n\treturn 'data';\r\n};\r\n\r\nDataCard.propTypes = {\r\n\tnyc: PropTypes.object.isRequired\r\n\t//gaurdianData: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tnyc: state.nyc.nyc\r\n\t//gaurdianData: state.gaurdian.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}