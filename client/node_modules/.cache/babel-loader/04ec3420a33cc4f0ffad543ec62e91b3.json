{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = ({\n  data\n}) => {\n  const dataArr = Object.entries(data);\n  console.log(Object.entries(data.data.nyt)); // \tconst nyt = dataArr[0][1][0];\n  // \tconst gaurdian = dataArr[0][1][1];\n  // \tlet gaurdianFiltered = [];\n  // \tif (gaurdian !== undefined) {\n  // \t\tgaurdianFiltered = gaurdian.filter(item => item !== undefined);\n  // \t}\n  // \tconst nytArr = [];\n  // \tconst gaurdianArr = [];\n  // \tgaurdianFiltered.map(item => {\n  // \t\tgaurdianArr.push(item);\n  // \t});\n  // \tif (typeof nyt !== 'undefined') {\n  // \t\tdata.data[0].map(item => {\n  // \t\t\tnytArr.push(item);\n  // \t\t});\n  // \t}\n  // \treturn (\n  // \t\t<ol>\n  // \t\t\t{nytArr.map(item => (\n  // \t\t\t\t<li key={item.url}>{item.url}</li>\n  // \t\t\t))}\n  // \t\t\t{gaurdianArr.map(item => (\n  // \t\t\t\t<li>{item.webTitle}</li>\n  // \t\t\t))}\n  // \t\t</ol>\n  // \t);\n  // };\n\n  return 'data';\n};\n\nDataCard.propTypes = {\n  DataCard: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","connect","PropTypes","DataCard","data","dataArr","Object","entries","console","log","nyt","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAMC,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAeH,IAAf,CAAhB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,OAAP,CAAeH,IAAI,CAACA,IAAL,CAAUM,GAAzB,CAAZ,EAH8B,CAK9B;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO,MAAP;AACA,CAvCD;;AAyCAP,QAAQ,CAACQ,SAAT,GAAqB;AACpBR,EAAAA,QAAQ,EAAED,SAAS,CAACU,IAAV,CAAeC,UADL;AAEpBT,EAAAA,IAAI,EAAEF,SAAS,CAACY,MAAV,CAAiBD;AAFH,CAArB;;AAIA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AADqB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACc,eAAD,CAAP,CAAyBZ,QAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = ({ data }) => {\r\n\tconst dataArr = Object.entries(data);\r\n\r\n\tconsole.log(Object.entries(data.data.nyt));\r\n\r\n\t// \tconst nyt = dataArr[0][1][0];\r\n\t// \tconst gaurdian = dataArr[0][1][1];\r\n\t// \tlet gaurdianFiltered = [];\r\n\r\n\t// \tif (gaurdian !== undefined) {\r\n\t// \t\tgaurdianFiltered = gaurdian.filter(item => item !== undefined);\r\n\t// \t}\r\n\r\n\t// \tconst nytArr = [];\r\n\t// \tconst gaurdianArr = [];\r\n\r\n\t// \tgaurdianFiltered.map(item => {\r\n\t// \t\tgaurdianArr.push(item);\r\n\t// \t});\r\n\r\n\t// \tif (typeof nyt !== 'undefined') {\r\n\t// \t\tdata.data[0].map(item => {\r\n\t// \t\t\tnytArr.push(item);\r\n\t// \t\t});\r\n\t// \t}\r\n\r\n\t// \treturn (\r\n\t// \t\t<ol>\r\n\t// \t\t\t{nytArr.map(item => (\r\n\t// \t\t\t\t<li key={item.url}>{item.url}</li>\r\n\t// \t\t\t))}\r\n\t// \t\t\t{gaurdianArr.map(item => (\r\n\t// \t\t\t\t<li>{item.webTitle}</li>\r\n\t// \t\t\t))}\r\n\t// \t\t</ol>\r\n\t// \t);\r\n\t// };\r\n\r\n\treturn 'data';\r\n};\r\n\r\nDataCard.propTypes = {\r\n\tDataCard: PropTypes.func.isRequired,\r\n\tdata: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n\tdata: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}