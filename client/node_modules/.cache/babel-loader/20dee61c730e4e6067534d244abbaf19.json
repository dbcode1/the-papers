{"ast":null,"code":"import { SEARCH_SUCCESS, SEARCH_FAILURE } from './types';\nimport axios from 'axios';\nexport const searchNews = searchTerm => async dispatch => {\n  try {\n    console.log('search');\n    const callSearchNews = await axios.get('/search-news', {\n      params: {\n        q: searchTerm\n      }\n    });\n    const allData = [...callSearchNews.data[0]];\n    console.log('action', callSearchNews.data);\n    dispatch({\n      type: SEARCH_SUCCESS,\n      payload: callSearchNews\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: SEARCH_FAILURE,\n      payload: {\n        msg: err,\n        status: err\n      }\n    });\n  }\n};\nexport default searchNews;","map":{"version":3,"sources":["C:/Users/Daniel Brusky/OneDrive/Desktop/papers/client/src/actions/searchNews.js"],"names":["SEARCH_SUCCESS","SEARCH_FAILURE","axios","searchNews","searchTerm","dispatch","console","log","callSearchNews","get","params","q","allData","data","type","payload","err","msg","status"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,cAAzB,QAA+C,SAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAIC,UAAD,IAAgB,MAAOC,QAAP,IAAoB;AAC7D,MAAI;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAMC,cAAc,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,cAAV,EAA0B;AACtDC,MAAAA,MAAM,EAAE;AACPC,QAAAA,CAAC,EAAEP;AADI;AAD8C,KAA1B,CAA7B;AAKA,UAAMQ,OAAO,GAAG,CAAE,GAAGJ,cAAc,CAACK,IAAf,CAAoB,CAApB,CAAL,CAAhB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,cAAc,CAACK,IAArC;AACAR,IAAAA,QAAQ,CAAC;AACRS,MAAAA,IAAI,EAAEd,cADE;AAERe,MAAAA,OAAO,EAAEP;AAFD,KAAD,CAAR;AAIA,GAbD,CAaE,OAAOQ,GAAP,EAAY;AACbV,IAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACAX,IAAAA,QAAQ,CAAC;AACRS,MAAAA,IAAI,EAAEb,cADE;AAERc,MAAAA,OAAO,EAAE;AACRE,QAAAA,GAAG,EAAED,GADG;AAERE,QAAAA,MAAM,EAAEF;AAFA;AAFD,KAAD,CAAR;AAOA;AACD,CAxBM;AA0BP,eAAeb,UAAf","sourcesContent":["import { SEARCH_SUCCESS, SEARCH_FAILURE } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const searchNews = (searchTerm) => async (dispatch) => {\r\n\ttry {\r\n\t\tconsole.log('search');\r\n\t\tconst callSearchNews = await axios.get('/search-news', {\r\n\t\t\tparams: {\r\n\t\t\t\tq: searchTerm,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconst allData = [ ...callSearchNews.data[0]]\r\n\t\tconsole.log('action', callSearchNews.data);\r\n\t\tdispatch({\r\n\t\t\ttype: SEARCH_SUCCESS,\r\n\t\t\tpayload: callSearchNews,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tconsole.log(err)\r\n\t\tdispatch({\r\n\t\t\ttype: SEARCH_FAILURE,\r\n\t\t\tpayload: {\r\n\t\t\t\tmsg: err,\r\n\t\t\t\tstatus: err,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default searchNews\r\n"]},"metadata":{},"sourceType":"module"}