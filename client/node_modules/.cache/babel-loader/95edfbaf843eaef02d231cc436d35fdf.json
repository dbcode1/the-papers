{"ast":null,"code":"import { TOP_STORIES_SUCCESS, TOP_STORIES_FAILURE } from './types';\nimport axios from 'axios';\nimport cors from '../utilities/cors';\nexport const topStories = () => async dispatch => {\n  // const nyt =\n  // \t'https://api.nytimes.com/svc/topstories/v2/us.json?api-key=vYeKrdCjpgK0YMYXG1yl1VDZ9fhPO7Yu';\n  //\tcors();\n  try {\n    // const nycCall = await axios.get(nyt);\n    const callNews = await axios.get('/top-stories'); // BACK END CALL ############# //\n    //console.log(callNews);\n    // $##############################  //\n    // const nycReq = nycCall.data.results;\n\n    dispatch({\n      type: TOP_STORIES_SUCCESS,\n      payload: callNews\n    });\n  } catch (err) {\n    dispatch({\n      type: TOP_STORIES_FAILURE,\n      payload: {\n        msg: err,\n        status: err\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/actions/topStories.js"],"names":["TOP_STORIES_SUCCESS","TOP_STORIES_FAILURE","axios","cors","topStories","dispatch","callNews","get","type","payload","err","msg","status"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,mBAA9B,QAAyD,SAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD;AACA;AAEA;AACA,MAAI;AACH;AAEA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,cAAV,CAAvB,CAHG,CAKH;AAEA;AACA;AAEA;;AAEAF,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAER,mBADE;AAERS,MAAAA,OAAO,EAAEH;AAFD,KAAD,CAAR;AAIA,GAhBD,CAgBE,OAAOI,GAAP,EAAY;AACbL,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEP,mBADE;AAERQ,MAAAA,OAAO,EAAE;AACRE,QAAAA,GAAG,EAAED,GADG;AAERE,QAAAA,MAAM,EAAEF;AAFA;AAFD,KAAD,CAAR;AAOA;AACD,CA9BM","sourcesContent":["import { TOP_STORIES_SUCCESS, TOP_STORIES_FAILURE } from './types';\r\nimport axios from 'axios';\r\nimport cors from '../utilities/cors';\r\n\r\nexport const topStories = () => async (dispatch) => {\r\n\t// const nyt =\r\n\t// \t'https://api.nytimes.com/svc/topstories/v2/us.json?api-key=vYeKrdCjpgK0YMYXG1yl1VDZ9fhPO7Yu';\r\n\r\n\t//\tcors();\r\n\ttry {\r\n\t\t// const nycCall = await axios.get(nyt);\r\n\r\n\t\tconst callNews = await axios.get('/top-stories');\r\n\r\n\t\t// BACK END CALL ############# //\r\n\r\n\t\t//console.log(callNews);\r\n\t\t// $##############################  //\r\n\r\n\t\t// const nycReq = nycCall.data.results;\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: TOP_STORIES_SUCCESS,\r\n\t\t\tpayload: callNews,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: TOP_STORIES_FAILURE,\r\n\t\t\tpayload: {\r\n\t\t\t\tmsg: err,\r\n\t\t\t\tstatus: err,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}