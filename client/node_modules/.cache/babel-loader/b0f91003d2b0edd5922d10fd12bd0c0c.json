{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataCard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DataCard = async ({\n  data\n}) => {\n  const results = data.data;\n  const resultsArr = results.map(items => {\n    return items;\n  }); //console.log(typeof resultsArr[0]);\n\n  const nyt = resultsArr[0];\n  const gaurdian = resultsArr[1]; //console.log(nyt);\n  // if (typeof nyt !== 'undefined') {\n  // \tnyt.map(item => {\n  // \t\tconsole.log(item);\n  // \t});\n  // }\n\n  const undefindCheck = arr => {\n    return typeof arr !== 'undefined';\n  };\n\n  const mapper = arr => {\n    arr.map(item => {\n      return item;\n    });\n  };\n\n  await undefindCheck(gaurdian);\n  await mapper(gaurdian); // if (typeof gaurdian !== 'undefined') {\n  // \tconst mappped = gaurdian.map(item => {\n  // \t\treturn item;\n  // \t});\n  // \tconsole.log(mappped);\n  // }\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"DataCard\");\n};\n\nDataCard.propTypes = {\n  DataCard: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps)(DataCard);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataCard.js"],"names":["React","connect","PropTypes","DataCard","data","results","resultsArr","map","items","nyt","gaurdian","undefindCheck","arr","mapper","item","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAoB;AACpC,QAAMC,OAAO,GAAGD,IAAI,CAACA,IAArB;AAEA,QAAME,UAAU,GAAGD,OAAO,CAACE,GAAR,CAAYC,KAAK,IAAI;AACvC,WAAOA,KAAP;AACA,GAFkB,CAAnB,CAHoC,CAOpC;;AAEA,QAAMC,GAAG,GAAGH,UAAU,CAAC,CAAD,CAAtB;AACA,QAAMI,QAAQ,GAAGJ,UAAU,CAAC,CAAD,CAA3B,CAVoC,CAYpC;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMK,aAAa,GAAGC,GAAG,IAAI;AAC5B,WAAO,OAAOA,GAAP,KAAe,WAAtB;AACA,GAFD;;AAIA,QAAMC,MAAM,GAAGD,GAAG,IAAI;AACrBA,IAAAA,GAAG,CAACL,GAAJ,CAAQO,IAAI,IAAI;AACf,aAAOA,IAAP;AACA,KAFD;AAGA,GAJD;;AAMA,QAAMH,aAAa,CAACD,QAAD,CAAnB;AACA,QAAMG,MAAM,CAACH,QAAD,CAAZ,CA/BoC,CAiCpC;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,CAzCD;;AA2CAP,QAAQ,CAACY,SAAT,GAAqB;AACpBZ,EAAAA,QAAQ,EAAED,SAAS,CAACc,IAAV,CAAeC,UADL;AAEpBb,EAAAA,IAAI,EAAEF,SAAS,CAACgB,MAAV,CAAiBD;AAFH,CAArB;;AAIA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjChB,EAAAA,IAAI,EAAEgB,KAAK,CAAChB;AADqB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACkB,eAAD,CAAP,CAAyBhB,QAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataCard = async ({ data }) => {\r\n\tconst results = data.data;\r\n\r\n\tconst resultsArr = results.map(items => {\r\n\t\treturn items;\r\n\t});\r\n\r\n\t//console.log(typeof resultsArr[0]);\r\n\r\n\tconst nyt = resultsArr[0];\r\n\tconst gaurdian = resultsArr[1];\r\n\r\n\t//console.log(nyt);\r\n\r\n\t// if (typeof nyt !== 'undefined') {\r\n\t// \tnyt.map(item => {\r\n\t// \t\tconsole.log(item);\r\n\t// \t});\r\n\t// }\r\n\r\n\tconst undefindCheck = arr => {\r\n\t\treturn typeof arr !== 'undefined';\r\n\t};\r\n\r\n\tconst mapper = arr => {\r\n\t\tarr.map(item => {\r\n\t\t\treturn item;\r\n\t\t});\r\n\t};\r\n\r\n\tawait undefindCheck(gaurdian);\r\n\tawait mapper(gaurdian);\r\n\r\n\t// if (typeof gaurdian !== 'undefined') {\r\n\t// \tconst mappped = gaurdian.map(item => {\r\n\t// \t\treturn item;\r\n\t// \t});\r\n\t// \tconsole.log(mappped);\r\n\t// }\r\n\r\n\treturn <h1>DataCard</h1>;\r\n};\r\n\r\nDataCard.propTypes = {\r\n\tDataCard: PropTypes.func.isRequired,\r\n\tdata: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n\tdata: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataCard);\r\n"]},"metadata":{},"sourceType":"module"}