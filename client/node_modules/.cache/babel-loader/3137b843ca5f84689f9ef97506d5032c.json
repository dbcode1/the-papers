{"ast":null,"code":"import { SEARCH_SUCCESS, SEARCH_FAILURE } from './types';\nimport axios from 'axios';\nimport cors from '../utilities/cors';\nexport const searchNews = searchTerm => async dispatch => {\n  const gaurdian = 'https://content.guardianapis.com/search?show-fields=thumbnail&' + searchTerm + '&page-size=100&show-blocks=body:latest&api-key=3cb25f91-26b8-4f58-833f-873b0478f441'; //\tcors();\n\n  try {\n    const callSearchNews = await axios.get('/search-news');\n    dispatch({\n      type: SEARCH_SUCCESS,\n      payload: callSearchNews\n    });\n  } catch (err) {\n    dispatch({\n      type: SEARCH_FAILURE,\n      payload: {\n        msg: err,\n        status: err\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/actions/searchNews.js"],"names":["SEARCH_SUCCESS","SEARCH_FAILURE","axios","cors","searchNews","searchTerm","dispatch","gaurdian","callSearchNews","get","type","payload","err","msg","status"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,cAAzB,QAA+C,SAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAO,MAAMC,UAAU,GAAIC,UAAD,IAAgB,MAAOC,QAAP,IAAoB;AAC7D,QAAMC,QAAQ,GACb,mEACAF,UADA,GAEA,qFAHD,CAD6D,CAM7D;;AAEA,MAAI;AACH,UAAMG,cAAc,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,cAAV,CAA7B;AAEAH,IAAAA,QAAQ,CAAC;AACRI,MAAAA,IAAI,EAAEV,cADE;AAERW,MAAAA,OAAO,EAAEH;AAFD,KAAD,CAAR;AAIA,GAPD,CAOE,OAAOI,GAAP,EAAY;AACbN,IAAAA,QAAQ,CAAC;AACRI,MAAAA,IAAI,EAAET,cADE;AAERU,MAAAA,OAAO,EAAE;AACRE,QAAAA,GAAG,EAAED,GADG;AAERE,QAAAA,MAAM,EAAEF;AAFA;AAFD,KAAD,CAAR;AAOA;AACD,CAxBM","sourcesContent":["import { SEARCH_SUCCESS, SEARCH_FAILURE } from './types';\r\nimport axios from 'axios';\r\nimport cors from '../utilities/cors';\r\n\r\nexport const searchNews = (searchTerm) => async (dispatch) => {\r\n\tconst gaurdian =\r\n\t\t'https://content.guardianapis.com/search?show-fields=thumbnail&' +\r\n\t\tsearchTerm +\r\n\t\t'&page-size=100&show-blocks=body:latest&api-key=3cb25f91-26b8-4f58-833f-873b0478f441';\r\n\r\n\t//\tcors();\r\n\r\n\ttry {\r\n\t\tconst callSearchNews = await axios.get('/search-news');\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: SEARCH_SUCCESS,\r\n\t\t\tpayload: callSearchNews,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: SEARCH_FAILURE,\r\n\t\t\tpayload: {\r\n\t\t\t\tmsg: err,\r\n\t\t\t\tstatus: err,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}