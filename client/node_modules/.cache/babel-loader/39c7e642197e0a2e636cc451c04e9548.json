{"ast":null,"code":"import { ADD_CARD, GET_CARDS, CARD_ERROR, RETRIEVE_CARDS_SUCCESS, DELETE_CARDS_SUCCESS, DELETE_CARDS_FAILURE } from '../actions/types';\nconst initialState = {\n  cards: [],\n  card: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case ADD_CARD:\n      return { ...state,\n        cards: [...state.containers, payload],\n        loading: false\n      };\n\n    case GET_CARDS:\n      return { ...state,\n        cards: payload,\n        loading: false\n      };\n\n    case RETRIEVE_CARDS_SUCCESS:\n      return { ...state,\n        cards: payload,\n        loading: false\n      };\n\n    case CARD_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case DELETE_CARDS_SUCCESS:\n      return { ...state,\n        cards: state.cards.filter(card => card.title !== payload),\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Daniel Brusky/OneDrive/Desktop/papers/client/src/reducers/card.js"],"names":["ADD_CARD","GET_CARDS","CARD_ERROR","RETRIEVE_CARDS_SUCCESS","DELETE_CARDS_SUCCESS","DELETE_CARDS_FAILURE","initialState","cards","card","loading","error","state","action","type","payload","containers","filter","title"],"mappings":"AAAA,SACEA,QADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,sBAJF,EAKEC,oBALF,EAMEC,oBANF,QAOO,kBAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAQA,eAAe,UAASC,KAAK,GAAEL,YAAhB,EAA8BM,MAA9B,EAAqC;AAClD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBF,MAAzB;;AACA,UAAOC,IAAP;AAEE,SAAKb,QAAL;AACE,aAAO,EACP,GAAGW,KADI;AAEPJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACI,UAAV,EAAsBD,OAAtB,CAFA;AAGPL,QAAAA,OAAO,EAAE;AAHF,OAAP;;AAMF,SAAKR,SAAL;AACE,aAAO,EACP,GAAGU,KADI;AAEPJ,QAAAA,KAAK,EAAEO,OAFA;AAGPL,QAAAA,OAAO,EAAE;AAHF,OAAP;;AAKF,SAAKN,sBAAL;AACE,aAAO,EACP,GAAGQ,KADI;AAEPJ,QAAAA,KAAK,EAAEO,OAFA;AAGPL,QAAAA,OAAO,EAAE;AAHF,OAAP;;AAKF,SAAKP,UAAL;AACA,aAAO,EACL,GAAGS,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKA,SAAKL,oBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYS,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACS,KAAL,KAAeH,OAA1C,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKJ;AACE,aAAOE,KAAP;AAlCF;AAoCD","sourcesContent":["import {\r\n  ADD_CARD,\r\n  GET_CARDS,\r\n  CARD_ERROR, \r\n  RETRIEVE_CARDS_SUCCESS,\r\n  DELETE_CARDS_SUCCESS,\r\n  DELETE_CARDS_FAILURE\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  cards :[],\r\n  card: null,\r\n  loading: true,\r\n  error: {}\r\n\r\n}\r\n\r\nexport default function(state= initialState, action){\r\n  const { type, payload} = action\r\n  switch(type){\r\n\r\n    case ADD_CARD:\r\n      return {\r\n      ...state,\r\n      cards: [...state.containers, payload],\r\n      loading: false\r\n    }\r\n    \r\n    case GET_CARDS:\r\n      return {\r\n      ...state,\r\n      cards: payload,\r\n      loading: false\r\n    }\r\n    case RETRIEVE_CARDS_SUCCESS:\r\n      return {\r\n      ...state,\r\n      cards: payload,\r\n      loading: false\r\n    }\r\n    case CARD_ERROR:\r\n    return {\r\n      ...state,\r\n      error: payload,\r\n      loading: false,\r\n    }\r\n    case DELETE_CARDS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        cards: state.cards.filter(card => card.title !== payload ),\r\n        loading: false,\r\n      }\r\n  default:\r\n    return state\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}