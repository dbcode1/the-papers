{"ast":null,"code":"import { ADD_COLLECTION_SUCCESS, ADD_COLLECTION_FAILURE, GET_COLLECTION_SUCCESS, GET_COLLECTION_FAILURE, DELETE_COLLECTION_SUCCESS, DELETE_COLLECTION_FAILURE, UPDATE_COLLECTIONS_SUCCESS } from './types';\n\nconst axios = require('axios'); // to be called on select in card and on collections view\n\n\nexport const updateCollections = () => async (dispatch, req, res) => {\n  const updates = await axios.get('/container/update');\n  console.log(\"updates\", updates);\n  dispatch({\n    type: UPDATE_COLLECTIONS_SUCCESS,\n    payload: updates.data\n  });\n}; // update \n\nexport const getCollections = () => async (dispatch, req, res) => {\n  try {\n    const res = await axios.get('/container');\n    console.log(\"get collections\", res);\n    dispatch({\n      type: GET_COLLECTION_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_COLLECTION_FAILURE,\n      payload: res\n    });\n  }\n};\nexport const addCollection = title => async (dispatch, res, req) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios({\n      method: 'post',\n      url: '/container',\n      data: {\n        title: title\n      },\n      config\n    });\n    console.log(\"new collection\", res);\n    dispatch({\n      type: ADD_COLLECTION_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ADD_COLLECTION_FAILURE\n    });\n  }\n};\nexport const deleteCollection = title => async (dispatch, res, req) => {\n  try {\n    const res = await axios({\n      method: 'delete',\n      url: '/container',\n      data: {\n        title: title\n      }\n    });\n    console.log(\"delete\", res);\n    dispatch({\n      type: DELETE_COLLECTION_SUCCESS,\n      payload: title\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_COLLECTION_FAILURE,\n      payload: res.data\n    });\n    console.log(err.message);\n  }\n};","map":{"version":3,"sources":["C:/Users/Daniel Brusky/OneDrive/Desktop/papers/client/src/actions/collection.js"],"names":["ADD_COLLECTION_SUCCESS","ADD_COLLECTION_FAILURE","GET_COLLECTION_SUCCESS","GET_COLLECTION_FAILURE","DELETE_COLLECTION_SUCCESS","DELETE_COLLECTION_FAILURE","UPDATE_COLLECTIONS_SUCCESS","axios","require","updateCollections","dispatch","req","res","updates","get","console","log","type","payload","data","getCollections","err","addCollection","title","config","headers","method","url","deleteCollection","message"],"mappings":"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","sourcesContent":["import {\r\n  ADD_COLLECTION_SUCCESS,\r\n\tADD_COLLECTION_FAILURE,\r\n\tGET_COLLECTION_SUCCESS,\r\n\tGET_COLLECTION_FAILURE,\r\n\tDELETE_COLLECTION_SUCCESS,\r\n\tDELETE_COLLECTION_FAILURE,\r\n\tUPDATE_COLLECTIONS_SUCCESS\r\n} from './types';\r\n\r\nconst axios = require('axios')\r\n\r\n// to be called on select in card and on collections view\r\nexport const updateCollections = () => async (dispatch, req, res) => {\r\n\t\tconst updates = await axios.get('/container/update');\r\n\t\tconsole.log(\"updates\", updates)\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATE_COLLECTIONS_SUCCESS,\r\n\t\t\tpayload: updates.data,\r\n\r\n\t\t});\r\n\r\n};\r\n\r\n// update \r\nexport const getCollections = () => async (dispatch, req, res) => {\r\n\ttry {\r\n\t\tconst res = await axios.get('/container');\r\n\t\tconsole.log(\"get collections\", res)\r\n\t\tdispatch({\r\n\t\t\ttype: GET_COLLECTION_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\r\n\t\t});\r\n\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_COLLECTION_FAILURE,\r\n\t\t\tpayload: res\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const addCollection = (title) => async (dispatch, res, req) => {\r\n\tconst config = { \r\n\t\theaders: {'Content-Type': 'application/json'\r\n\t\t}\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: '/container',\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: title\r\n\t\t\t},\r\n\t\t\tconfig\r\n\t\t} )\r\n\r\n\t\tconsole.log(\"new collection\", res)\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_COLLECTION_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_COLLECTION_FAILURE,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteCollection = (title) => async (dispatch, res, req) => {\r\n\t\r\n\ttry{\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'delete',\r\n\t\t\turl: '/container',\r\n\t\t\tdata: {\r\n\t\t\t\ttitle : title\r\n\t\t\t}\r\n\t\t} )\r\n\r\n\t\tconsole.log(\"delete\", res)\r\n\t\t\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_COLLECTION_SUCCESS,\r\n\t\t\tpayload: title\r\n\t\t});\r\n\t} catch (err){\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_COLLECTION_FAILURE,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t\tconsole.log(err.message)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}