{"ast":null,"code":"import { DATA_FAILURE, NYC_DATA_SUCCESS } from './types';\nimport axios from 'axios';\nimport cors from '../utilities/cors';\nexport const getNyc = () => async dispatch => {\n  // const nyt =\n  // \t'https://api.nytimes.com/svc/topstories/v2/us.json?api-key=vYeKrdCjpgK0YMYXG1yl1VDZ9fhPO7Yu';\n  //\tcors();\n  try {\n    // const nycCall = await axios.get(nyt);\n    const callNews = await axios.get('/getCurrentNews'); // BACK END CALL ############# //\n\n    console.log(callNews.data); // $##############################  //\n    // const nycReq = nycCall.data.results;\n\n    dispatch({\n      type: NYC_DATA_SUCCESS,\n      payload: callNews\n    });\n  } catch (err) {\n    dispatch({\n      type: DATA_FAILURE,\n      payload: {\n        msg: err,\n        status: err\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/actions/getNyc.js"],"names":["DATA_FAILURE","NYC_DATA_SUCCESS","axios","cors","getNyc","dispatch","callNews","get","console","log","data","type","payload","err","msg","status"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,SAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC/C;AACA;AAEA;AACA,MAAI;AACH;AAEA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,iBAAV,CAAvB,CAHG,CAKH;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB,EAPG,CAQH;AAEA;;AAEAL,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEV,gBADE;AAERW,MAAAA,OAAO,EAAEN;AAFD,KAAD,CAAR;AAIA,GAhBD,CAgBE,OAAOO,GAAP,EAAY;AACbR,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEX,YADE;AAERY,MAAAA,OAAO,EAAE;AACRE,QAAAA,GAAG,EAAED,GADG;AAERE,QAAAA,MAAM,EAAEF;AAFA;AAFD,KAAD,CAAR;AAOA;AACD,CA9BM","sourcesContent":["import { DATA_FAILURE, NYC_DATA_SUCCESS } from './types';\r\nimport axios from 'axios';\r\nimport cors from '../utilities/cors';\r\n\r\nexport const getNyc = () => async (dispatch) => {\r\n\t// const nyt =\r\n\t// \t'https://api.nytimes.com/svc/topstories/v2/us.json?api-key=vYeKrdCjpgK0YMYXG1yl1VDZ9fhPO7Yu';\r\n\r\n\t//\tcors();\r\n\ttry {\r\n\t\t// const nycCall = await axios.get(nyt);\r\n\r\n\t\tconst callNews = await axios.get('/getCurrentNews');\r\n\r\n\t\t// BACK END CALL ############# //\r\n\r\n\t\tconsole.log(callNews.data);\r\n\t\t// $##############################  //\r\n\r\n\t\t// const nycReq = nycCall.data.results;\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: NYC_DATA_SUCCESS,\r\n\t\t\tpayload: callNews,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: DATA_FAILURE,\r\n\t\t\tpayload: {\r\n\t\t\t\tmsg: err,\r\n\t\t\t\tstatus: err,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}