{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Brusky\\\\projects\\\\the-papers\\\\client\\\\src\\\\components\\\\DataView.js\";\nimport React, { useEffect } from 'react'; //import { Link, withRouter } from 'react-router-dom';\n\nimport { getNyc } from '../actions/getNyc';\nimport { getGaurdian } from '../actions/getGaurdian';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DataCard from './DataCard';\n\nconst DataView = ({\n  getNyc,\n  getGaurdian\n}) => dispatch => {\n  // useEffect(() => {\n  // \treturn () => {\n  // \t\tgetNyc();\n  // \t\tgetGaurdian();\n  // \t};\n  // }, [getNyc(), getGaurdian()]);\n  // dispatch({\n  // \ttype: NYC_DATA_SUCCESS,\n  // \tpayload: nycFiltered\n  // });\n  return /*#__PURE__*/React.createElement(DataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  });\n};\n\nDataView.propTypes = {\n  getNyc: PropTypes.func.isRequired,\n  getGaurdian: PropTypes.func.isRequired,\n  nycData: PropTypes.object.isRequired,\n  gaurdianData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  nycData: state.nycData,\n  gaurdianData: state.gaurdianData\n});\n\nexport default connect(mapStateToProps, {\n  getNyc,\n  getGaurdian\n})(DataView);","map":{"version":3,"sources":["C:/Users/Daniel Brusky/projects/the-papers/client/src/components/DataView.js"],"names":["React","useEffect","getNyc","getGaurdian","connect","PropTypes","DataCard","DataView","dispatch","propTypes","func","isRequired","nycData","object","gaurdianData","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEL,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA6BK,QAAQ,IAAI;AACzD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,sBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,CAdD;;AAgBAD,QAAQ,CAACE,SAAT,GAAqB;AACpBP,EAAAA,MAAM,EAAEG,SAAS,CAACK,IAAV,CAAeC,UADH;AAEpBR,EAAAA,WAAW,EAAEE,SAAS,CAACK,IAAV,CAAeC,UAFR;AAGpBC,EAAAA,OAAO,EAAEP,SAAS,CAACQ,MAAV,CAAiBF,UAHN;AAIpBG,EAAAA,YAAY,EAAET,SAAS,CAACQ,MAAV,CAAiBF;AAJX,CAArB;;AAMA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AACjCJ,EAAAA,OAAO,EAAEI,KAAK,CAACJ,OADkB;AAEjCE,EAAAA,YAAY,EAAEE,KAAK,CAACF;AAFa,CAAL,CAA7B;;AAKA,eAAeV,OAAO,CAACW,eAAD,EAAkB;AAAEb,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAAkDI,QAAlD,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\n//import { Link, withRouter } from 'react-router-dom';\r\nimport { getNyc } from '../actions/getNyc';\r\nimport { getGaurdian } from '../actions/getGaurdian';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport DataCard from './DataCard';\r\n\r\nconst DataView = ({ getNyc, getGaurdian }) => dispatch => {\r\n\t// useEffect(() => {\r\n\t// \treturn () => {\r\n\t// \t\tgetNyc();\r\n\t// \t\tgetGaurdian();\r\n\t// \t};\r\n\t// }, [getNyc(), getGaurdian()]);\r\n\r\n\t// dispatch({\r\n\t// \ttype: NYC_DATA_SUCCESS,\r\n\t// \tpayload: nycFiltered\r\n\t// });\r\n\r\n\treturn <DataCard />;\r\n};\r\n\r\nDataView.propTypes = {\r\n\tgetNyc: PropTypes.func.isRequired,\r\n\tgetGaurdian: PropTypes.func.isRequired,\r\n\tnycData: PropTypes.object.isRequired,\r\n\tgaurdianData: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n\tnycData: state.nycData,\r\n\tgaurdianData: state.gaurdianData\r\n});\r\n\r\nexport default connect(mapStateToProps, { getNyc, getGaurdian })(DataView);\r\n"]},"metadata":{},"sourceType":"module"}