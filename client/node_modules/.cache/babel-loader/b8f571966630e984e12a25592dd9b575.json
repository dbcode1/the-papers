{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_CARDS, CARD_ERROR, ADD_CARD, RETRIEVE_CARDS_SUCCESS, RETRIEVE_CARDS_FAILURE, DELETE_CARDS_SUCCESS, DELETE_CARDS_FAILURE } from './types'; // get posts\n\nexport const getCards = searchTerm => async (dispatch, res, req) => {\n  try {\n    const res = await axios.get('/search-news', {\n      params: {\n        q: searchTerm\n      }\n    });\n    dispatch({\n      type: GET_CARDS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addCard = (title, img, url, containerTitle) => async (dispatch, res, req) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; // send card data to collection in DB\n\n  console.log(containerTitle);\n\n  try {\n    const res = await axios({\n      method: 'post',\n      url: '/card',\n      data: {\n        title,\n        img,\n        url,\n        containerTitle\n      },\n      config\n    });\n    console.log('addCard', res);\n  } catch (err) {\n    console.log(err.message);\n  }\n};\nexport const retrieveCards = containerTitle => async (dispatch, res, req) => {\n  try {\n    const res = await axios.get('/card', {\n      params: {\n        q: containerTitle\n      }\n    });\n    console.log('res', res);\n    dispatch({\n      type: RETRIEVE_CARDS_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: RETRIEVE_CARDS_FAILURE,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteCards = title => async (dispatch, res, req) => {\n  try {\n    const res = await axios({\n      method: 'delete',\n      url: '/card',\n      data: {\n        title: title\n      }\n    });\n    console.log('action res', res);\n    dispatch({\n      type: DELETE_CARDS_SUCCESS,\n      payload: []\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_CARDS_FAILURE,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Daniel Brusky/OneDrive/Desktop/papers/client/src/actions/card.js"],"names":["axios","setAlert","GET_CARDS","CARD_ERROR","ADD_CARD","RETRIEVE_CARDS_SUCCESS","RETRIEVE_CARDS_FAILURE","DELETE_CARDS_SUCCESS","DELETE_CARDS_FAILURE","getCards","searchTerm","dispatch","res","req","get","params","q","type","payload","data","err","msg","response","statusText","status","addCard","title","img","url","containerTitle","config","headers","console","log","method","message","retrieveCards","deleteCards"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {setAlert} from './alert';\r\nimport {\r\n  GET_CARDS,\r\n  CARD_ERROR, \r\n  ADD_CARD,\r\n  RETRIEVE_CARDS_SUCCESS,\r\n  RETRIEVE_CARDS_FAILURE,\r\n  DELETE_CARDS_SUCCESS,\r\n  DELETE_CARDS_FAILURE\r\n} from './types'\r\n\r\n// get posts\r\nexport const getCards = (searchTerm) => async (dispatch, res, req) => {\r\n  try { \r\n    const res = await axios.get('/search-news', {\r\n\t\t\tparams: {\r\n\t\t\t\tq: searchTerm,\r\n\t\t\t},\r\n\t\t});\r\n    dispatch({\r\n      type: GET_CARDS,\r\n      payload: res.data\r\n    })\r\n  } catch(err) {\r\n    dispatch({\r\n      type: CARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const addCard = (title, img, url, containerTitle) => async (dispatch, res, req) =>  {\r\n  \r\n  const config = { \r\n\t\theaders: {'Content-Type': 'application/json'\r\n\t\t}\r\n  }\r\n  // send card data to collection in DB\r\n  console.log(containerTitle)\r\n  try {\r\n    const res = await axios({\r\n      method: 'post',\r\n      url: '/card',\r\n      data: {\r\n        title,\r\n        img,\r\n        url,\r\n        containerTitle \r\n      },\r\n      config\r\n    } ) \r\n\r\n    console.log('addCard', res)\r\n  }\r\n  \r\n  catch(err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const retrieveCards = (containerTitle) => async (dispatch, res, req) => {\r\n  try { \r\n   \r\n    const res = await axios.get('/card', {\r\n\t\t\tparams: {\r\n\t\t\t\tq: containerTitle,\r\n\t\t\t},\r\n    });\r\n    console.log('res', res)\r\n    dispatch({\r\n      type: RETRIEVE_CARDS_SUCCESS,\r\n      payload: res.data\r\n    })\r\n      \r\n  } catch(err) {\r\n    dispatch({\r\n      type: RETRIEVE_CARDS_FAILURE,\r\n      payload: { msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteCards = (title) => async (dispatch, res, req) => {\r\n\r\n  try { \r\n    const res = await axios({\r\n\t\t\tmethod: 'delete',\r\n\t\t\turl: '/card',\r\n\t\t\tdata: {\r\n\t\t\t\ttitle : title\r\n\t\t\t}\r\n    })\r\n    console.log( 'action res', res)\r\n    dispatch({\r\n      type: DELETE_CARDS_SUCCESS,\r\n      payload: []\r\n    })\r\n      \r\n  } catch(err) {\r\n    dispatch({\r\n      type: DELETE_CARDS_FAILURE,\r\n      payload: { msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}