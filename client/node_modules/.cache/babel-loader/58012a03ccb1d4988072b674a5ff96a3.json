{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport store from '../store';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, DELETE_USER, SET_ALERT } from './types';\nimport setAuthToken from '../utils/setAuthToken'; // Load User\n\nexport const loadUser = () => async dispatch => {\n  try {\n    const res = await axios.get('/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  console.log(\"register\");\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/user', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(\"errors\", errors); // if (errors) {\n    // \terrors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    // }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\nexport const alert = err => {\n  console.log(err);\n}; // Login User\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const body = JSON.stringify({\n      email,\n      password\n    });\n    const res = await axios.post('/auth/login', body, config);\n    console.log(res.data.errors.msg);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    console.log(err.response.data.errors[0].msg);\n  }\n}; // Logout\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n}; // Delete User Account\n\nexport const deleteUser = () => async dispatch => {\n  const body = store.getState().auth.token;\n  await axios.delete('/user', body);\n  dispatch({\n    type: DELETE_USER\n  });\n};","map":{"version":3,"sources":["C:/Users/Daniel Brusky/OneDrive/Desktop/papers/client/src/actions/auth.js"],"names":["axios","setAlert","store","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","DELETE_USER","SET_ALERT","setAuthToken","loadUser","dispatch","res","get","type","payload","data","err","register","name","email","password","console","log","config","headers","body","JSON","stringify","post","errors","response","alert","login","msg","logout","deleteUser","getState","auth","token","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport store from '../store';\r\n\r\nimport {\r\n\tREGISTER_SUCCESS,\r\n\tREGISTER_FAIL,\r\n\tUSER_LOADED,\r\n\tAUTH_ERROR,\r\n\tLOGIN_SUCCESS,\r\n\tLOGIN_FAIL,\r\n\tLOGOUT,\r\n\tDELETE_USER,\r\n\tSET_ALERT,\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.get('/auth');\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOADED,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_ERROR,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n\tconsole.log(\"register\")\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t};\r\n\r\n\tconst body = JSON.stringify({ name, email, password });\r\n\r\n\ttry {\r\n\r\n\t\tconst res = await axios.post('/user', body, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: REGISTER_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t\tdispatch(loadUser());\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\t\tconsole.log(\"errors\", errors);\r\n\r\n\t\t// if (errors) {\r\n\t\t// \terrors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t// }\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: REGISTER_FAIL,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const alert = (err) => {\r\n\tconsole.log(err);\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst body = JSON.stringify({ email, password });\r\n\t\t\r\n\t\tconst res = await axios.post('/auth/login', body, config);\r\n\t\tconsole.log(res.data.errors.msg)\r\n\t\tdispatch({\r\n\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\r\n\t\tdispatch(loadUser());\r\n\t} catch (err) {\r\n\t\tconsole.log(err.response.data.errors[0].msg);\r\n\r\n\t}\r\n};\r\n\r\n// Logout\r\nexport const logout = () => (dispatch) => {\r\n\tdispatch({\r\n\t\ttype: LOGOUT,\r\n\t});\r\n};\r\n\r\n// Delete User Account\r\nexport const deleteUser = () => async (dispatch) => {\r\n\tconst body = store.getState().auth.token;\r\n\r\n\tawait axios.delete('/user', body);\r\n\r\n\tdispatch({\r\n\t\ttype: DELETE_USER,\r\n\t});\r\n};\r\n"]},"metadata":{},"sourceType":"module"}